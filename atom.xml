<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[永久记录]]></title>
  <link href="https://smartdigg.github.io/atom.xml" rel="self"/>
  <link href="https://smartdigg.github.io/"/>
  <updated>2025-03-01T01:52:22+08:00</updated>
  <id>https://smartdigg.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[如何在个人电脑上部署DeepSeek]]></title>
    <link href="https://smartdigg.github.io/how-to-deploy-deepseek-on-your-computer.html"/>
    <updated>2025-02-18T01:40:47+08:00</updated>
    <id>https://smartdigg.github.io/how-to-deploy-deepseek-on-your-computer.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%87%86%E5%A4%87">准备</a>
<ul>
<li><a href="#%E4%B8%8B%E8%BD%BDollama">下载Ollama</a></li>
<li><a href="#%E5%AE%89%E8%A3%85ollama">安装Ollama</a></li>
</ul>
</li>
<li><a href="#%E9%83%A8%E7%BD%B2deepseek">部署DeepSeek</a>
<ul>
<li><a href="#%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%89%88%E6%9C%AC">选择合适的版本</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2deepseek-32b">部署DeepSeek 32B</a></li>
<li><a href="#%E9%85%8D%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81">配置浏览器支持</a></li>
<li><a href="#%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE">参数设置</a></li>
</ul>
</li>
<li><a href="#%E5%85%B6%E4%BB%96%E6%94%AF%E6%8C%81%E6%A8%A1%E5%9E%8B">其他支持模型</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>很多互联网公司支持使用满血版DeepSeek，与个人部署的DeepSeek的区别就在用户需要献出自己的手机号码、IP地址、设备信息、聊天记录等个人隐私信息，另外国内公司不支持无账号使用大模型，必须绑定手机号码。考虑到国内长期存在的实名制，手机号码实际绑定了用户的身份证信息以及家庭地址等等。</p>
<h2><a id="%E5%87%86%E5%A4%87" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>准备</h2>
<h3><a id="%E4%B8%8B%E8%BD%BDollama" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>下载Ollama</h3>
<p>到Ollama网页下载程序，<a href="https://ollama.com/download">https://ollama.com/download</a>。</p>
<h3><a id="%E5%AE%89%E8%A3%85ollama" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装Ollama</h3>
<p>以macOS为例，一般情况下直接安装。如果没有图标出现，则需进入<code>/Applications/Ollama.app/Contents/Resources/</code>，打开该文件夹下<code>ollama</code>即可。之后便可通过终端运行<code>ollama -v</code>查看软件版本号。软件支持自动更新，无需担心。</p>
<h2><a id="%E9%83%A8%E7%BD%B2deepseek" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>部署DeepSeek</h2>
<h3><a id="%E9%80%89%E6%8B%A9%E5%90%88%E9%80%82%E7%9A%84%E7%89%88%E6%9C%AC" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>选择合适的版本</h3>
<p>到Ollama资料库查找DeepSeek-r1 <a href="https://ollama.com/library/deepseek-r1">https://ollama.com/library/deepseek-r1</a>。<a href="https://github.com/deepseek-ai/DeepSeek-R1">DeepSeek</a>可供下载的有一个满血版671b以及六个蒸馏模型，主要区别如下：</p>
<ul>
<li>DeepSeek-R1-Distill-Qwen-1.5B，要求内存至少8G；</li>
<li>DeepSeek-R1-Distill-Qwen-7B，要求内存至少16GB；</li>
<li>DeepSeek-R1-Distill-Llama-8B，要求内存至少16GB；</li>
<li>DeepSeek-R1-Distill-Qwen-14B，要求内存至少32GB；</li>
<li>DeepSeek-R1-Distill-Qwen-32B，要求内存建议至少32GB；</li>
<li>DeepSeek-R1-Distill-Llama-70B，要求内存48GB以上；</li>
<li>deepseek-r1:671b，俗称满血版，要求内存512GB以上。</li>
</ul>
<p>个人电脑使用蒸馏模型即可。</p>
<h3><a id="%E9%83%A8%E7%BD%B2deepseek-32b" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>部署DeepSeek 32B</h3>
<p>以<code>DeepSeek-R1-Distill-Qwen-14B</code>为例，在终端执行：</p>
<pre class="line-numbers"><code class="language-zsh">ollama run deepseek-r1:32b
</code></pre>
<p>等待安装完成即可。</p>
<h3><a id="%E9%85%8D%E7%BD%AE%E6%B5%8F%E8%A7%88%E5%99%A8%E6%94%AF%E6%8C%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>配置浏览器支持</h3>
<p>安装浏览器插件<code>Page Assist</code>，之后便可以通过浏览器运行。</p>
<ul>
<li>Github <a href="https://github.com/n4ze3m/page-assist">https://github.com/n4ze3m/page-assist</a></li>
<li>Firefox：<a href="https://addons.mozilla.org/en-US/firefox/addon/page-assist/">https://addons.mozilla.org/en-US/firefox/addon/page-assist</a></li>
<li>Chrome <a href="https://chromewebstore.google.com/detail/page-assist-%E6%9C%AC%E5%9C%B0-ai-%E6%A8%A1%E5%9E%8B%E7%9A%84-web/jfgfiigpkhlkbnfnbobbkinehhfdhndo?pli=1">https://chromewebstore.google.com/detail/page-assist-%E6%9C%AC%E5%9C%B0-ai-%E6%A8%A1%E5%9E%8B%E7%9A%84-web/jfgfiigpkhlkbnfnbobbkinehhfdhndo?pli=1</a></li>
</ul>
<p>在浏览器中点击<code>Page Assist</code>插件图标，选择模型以及提示词后便可使用DeepSeek。开启网络搜索结果可能会更好。</p>
<h3><a id="%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参数设置</h3>
<p>来自官方的推荐参数设置。</p>
<ul>
<li>没有 system prompt</li>
<li>温度：0.6</li>
<li>参考搜索与文件上传的官方提示</li>
<li>减轻模型旁路思维</li>
</ul>
<p>中文查询</p>
<pre class="line-numbers"><code class="language-plain_text">search_answer_zh_template = \
'''# 以下内容是基于用户发送的消息的搜索结果:
{search_results}
在我给你的搜索结果中，每个结果都是[webpage X begin]...[webpage X end]格式的，X代表每篇文章的数字索引。请在适当的情况下在句子末尾引用上下文。请按照引用编号[citation:X]的格式在答案中对应部分引用上下文。如果一句话源自多个上下文，请列出所有相关的引用编号，例如[citation:3][citation:5]，切记不要将引用集中在最后返回引用编号，而是在答案对应部分列出。
在回答时，请注意以下几点：
- 今天是{cur_date}。
- 并非搜索结果的所有内容都与用户的问题密切相关，你需要结合问题，对搜索结果进行甄别、筛选。
- 对于列举类的问题（如列举所有航班信息），尽量将答案控制在10个要点以内，并告诉用户可以查看搜索来源、获得完整信息。优先提供信息完整、最相关的列举项；如非必要，不要主动告诉用户搜索结果未提供的内容。
- 对于创作类的问题（如写论文），请务必在正文的段落中引用对应的参考编号，例如[citation:3][citation:5]，不能只在文章末尾引用。你需要解读并概括用户的题目要求，选择合适的格式，充分利用搜索结果并抽取重要信息，生成符合用户要求、极具思想深度、富有创造力与专业性的答案。你的创作篇幅需要尽可能延长，对于每一个要点的论述要推测用户的意图，给出尽可能多角度的回答要点，且务必信息量大、论述详尽。
- 如果回答很长，请尽量结构化、分段落总结。如果需要分点作答，尽量控制在5个点以内，并合并相关的内容。
- 对于客观类的问答，如果问题的答案非常简短，可以适当补充一到两句相关信息，以丰富内容。
- 你需要根据用户要求和回答内容选择合适、美观的回答格式，确保可读性强。
- 你的回答应该综合多个相关网页来回答，不能重复引用一个网页。
- 除非用户要求，否则你回答的语言需要和用户提问的语言保持一致。
 
# 用户消息为：
{question}'''
</code></pre>
<h2><a id="%E5%85%B6%E4%BB%96%E6%94%AF%E6%8C%81%E6%A8%A1%E5%9E%8B" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>其他支持模型</h2>
<p>ollama也可以安装其他模型，在网站可查看支持模型列表 <a href="https://ollama.com/library">https://ollama.com/library</a>。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>DeepSeek Github仓库 <a href="https://github.com/deepseek-ai/DeepSeek-R1">https://github.com/deepseek-ai/DeepSeek-R1</a></li>
<li>DeepSeek 官方推荐的部署 DeepSeek-R1 最佳设置参数，和官网一样。 <a href="https://www.appinn.com/deepseek-r1-deploying-recommended-settings/">https://www.appinn.com/deepseek-r1-deploying-recommended-settings/</a></li>
<li>用M1 Max MacBook Pro私有化部署DeepSeek-R1 <a href="https://blog.laoda.de/archives/deploy-deepseek-r1-using-m1-max-macbook-pro">https://blog.laoda.de/archives/deploy-deepseek-r1-using-m1-max-macbook-pro</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自建搜索引擎]]></title>
    <link href="https://smartdigg.github.io/self-hosted-search-engine.html"/>
    <updated>2024-11-30T10:44:45+08:00</updated>
    <id>https://smartdigg.github.io/self-hosted-search-engine.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%85%AC%E5%85%B1%E5%AE%9E%E4%BE%8B">公共实例</a></li>
<li><a href="#whoogle-search">Whoogle Search</a></li>
<li><a href="#searxng">SearXNG</a></li>
<li><a href="#yacy">YaCy</a></li>
<li><a href="#%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8Fzerotier">内网穿透Zerotier</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>中国大陆网络搜索环境逐渐恶化，信息检索结果缺乏真实性和可信度。当然用户可以选择国外的搜索引擎直接使用，但这些搜索引擎不保证稳定性或被墙的可能性。有条件的用户可以在自己的VPS上自建搜索引擎，并通过内网穿透使用。比较有名的有Whoogle Search，SearXNG，YaCy等。</p>
<h2><a id="%E5%85%AC%E5%85%B1%E5%AE%9E%E4%BE%8B" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>公共实例</h2>
<p>如果不想自建搜索引擎，也可以直接使用公共实例。</p>
<ul>
<li>Searx Public Instances <a href="https://searx.space">https://searx.space</a></li>
<li>Whoogle Public Instances <a href="https://github.com/benbusby/whoogle-search?tab=readme-ov-file#public-instances">https://github.com/benbusby/whoogle-search?tab=readme-ov-file#public-instances</a></li>
<li>其他<a href="search-engine.html">网络搜索引擎</a></li>
</ul>
<h2><a id="whoogle-search" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Whoogle Search</h2>
<p>Whoogle Search 搜索结果基于Google搜索，没有广告也没有追踪。详细介绍看Github主页<a href="https://github.com/benbusby/whoogle-search">https://github.com/benbusby/whoogle-search</a>。</p>
<p>Docker CLI安装：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo docker pull benbusby/whoogle-search
$ sudo docker run --publish 5000:5000 --detach --name whoogle-search benbusby/whoogle-search:latest
</code></pre>
<p>也可以使用docker-compose安装：</p>
<pre class="line-numbers"><code class="language-plain_text">$ git clone https://github.com/benbusby/whoogle-search.git
$ cd whoogle-search
$ sudo docker-compose up
</code></pre>
<p>Whoogle Search的端口为5000。</p>
<h2><a id="searxng" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>SearXNG</h2>
<p>相比Whoogle Search，SearXNG的搜索结果来自多个搜索引擎。</p>
<p>安装searxng-docker：</p>
<pre class="line-numbers"><code class="language-plain_text">$ cd ~
$ mkdir searxng-docker
$ cd searxng-docker
$ vim docker-compose.yaml
</code></pre>
<p>文件<code>docker-compose.yaml</code>的内容（此处参考<a href="https://nougats.cn/searxng/">使用docker搭建SearXNG搜索引擎</a>）：</p>
<pre class="line-numbers"><code class="language-plain_text">version: '3.7'
 
services:
# 我们注释掉caddy的内容
  #  caddy:
  #  container_name: caddy
  #  image: caddy:2-alpine
  #  network_mode: host
  #  volumes:
  #    - ./Caddyfile:/etc/caddy/Caddyfile:ro
  #    - caddy-data:/data:rw
  #    - caddy-config:/config:rw
  #  environment:
  #    - SEARXNG_HOSTNAME=${SEARXNG_HOSTNAME:-http://localhost:80}
  #    - SEARXNG_TLS=${LETSENCRYPT_EMAIL:-internal}
  #  cap_drop:
  #    - ALL
  #  cap_add:
  #    - NET_BIND_SERVICE
  #    - DAC_OVERRIDE
 
  redis:
    container_name: redis
    image: &quot;redis:alpine&quot;
    command: redis-server --save &quot;&quot; --appendonly &quot;no&quot;
    networks:
      - searxng
    tmpfs:
      - /var/lib/redis
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
 
  searxng:
    container_name: searxng
    image: searxng/searxng:latest
    networks:
      - searxng
    ports:
     - &quot;8180:8080&quot;   # 这个冒号左边的端口可以更改，右边的不要改
    volumes:
      - ./searxng:/etc/searxng:rw
    environment:
      - SEARXNG_BASE_URL=https://${SEARXNG_HOSTNAME:-localhost}/
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: &quot;json-file&quot;
      options:
        max-size: &quot;1m&quot;
        max-file: &quot;1&quot;
networks:
  searxng:
    ipam:
      driver: default
 
        #volumes:
        #caddy-data:
        #caddy-config:
</code></pre>
<p>生成密钥文件：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sed -i &quot;s|ultrasecretkey|$(openssl rand -hex 32)|g&quot; searxng/settings.yml
</code></pre>
<p>个人使用实例可以将<code>searxng/settings.yml</code>中<code>limiter</code>的值改成<code>false</code>。</p>
<p>启动Docker镜像：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo docker-compose up -d  
</code></pre>
<p>SearXNG端口为8080。</p>
<h2><a id="yacy" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>YaCy</h2>
<p>YaCy是一款分布式搜索引擎，搜索结果完全由用户自己掌控。YaCy可以单独安装使用，也可以加入P2P将索引分享给其他人使用。</p>
<p>Docker安装(适合intel芯片)：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo docker run -d --name yacy_search_server -p 8090:8090 -p 8443:8443 -v yacy_search_server_data:/opt/yacy_search_server/DATA --restart unless-stopped --log-opt max-size=200m --log-opt max-file=2 yacy/yacy_search_server:latest
</code></pre>
<p>YaCy的端口为8090。</p>
<h2><a id="%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8Fzerotier" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>内网穿透Zerotier</h2>
<p>Zerotier是一款不错的内网穿透软件，需要在VPS及自己常用的设备上同时安装。VPS以Linux系统为例。</p>
<p>安装Zerotier：</p>
<pre class="line-numbers"><code class="language-plain_text">$ curl -s 'https://raw.githubusercontent.com/zerotier/ZeroTierOne/main/doc/contact%40zerotier.com.gpg' | gpg --import &amp;&amp; \  
if z=$(curl -s 'https://install.zerotier.com/' | gpg); then echo &quot;$z&quot; | sudo bash; fi
</code></pre>
<p>开机启动Zerotier：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo systemctl enable zerotier-one
</code></pre>
<p>加入网络：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo zerotier-cli join ################ 
</code></pre>
<p>其中<code>################</code>为你想加入网络的16位ID。然后登录zerotier官网允许设备即可。</p>
<p>同样地，你也需要在日常使用的设备上安装zerotier，在<a href="https://www.zerotier.com/download/">Zerotier网站</a>上下载合适的版本。加入相同网络，并登录zerotier官网允许设备。</p>
<p>在zerotier官网可以查看所加入网络下所有设备的IP地址，记下你的VPS的IP地址。假设VPS的IP地址为<code>10.147.17.102</code>，那么可以通过如下方式访问自建的搜索引擎：</p>
<ul>
<li>Whoogle-search：<a href="http://10.147.17.102:5000">http://10.147.17.102:5000</a></li>
<li>SearXNG：<a href="http://10.147.17.102:8080">http://10.147.17.102:8080</a></li>
<li>YaCy：<a href="http://10.147.17.102:8090">http://10.147.17.102:8090</a></li>
</ul>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>SearXNG Docker <a href="https://github.com/searxng/searxng-docker">https://github.com/searxng/searxng-docker</a></li>
<li>SearXNG Github <a href="https://github.com/searxng/searxng">https://github.com/searxng/searxng</a></li>
<li>whoogle Search <a href="https://github.com/benbusby/whoogle-search">https://github.com/benbusby/whoogle-search</a></li>
<li>YaCy Github <a href="https://github.com/yacy/yacy_search_server">https://github.com/yacy/yacy_search_server</a></li>
<li>YaCy Homepage <a href="https://yacy.net/">https://yacy.net</a></li>
<li>P2P分布式搜索引擎YaCy <a href="https://blog.csdn.net/wbsu2004/article/details/127646231">https://blog.csdn.net/wbsu2004/article/details/127646231</a></li>
<li>使用docker搭建SearXNG搜索引擎 <a href="https://nougats.cn/searxng/">https://nougats.cn/searxng</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SmartDNS 配置]]></title>
    <link href="https://smartdigg.github.io/configure-smartdns.html"/>
    <updated>2024-05-26T12:09:24+08:00</updated>
    <id>https://smartdigg.github.io/configure-smartdns.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#smartdns%E5%AE%89%E8%A3%85">SmartDNS 安装</a>
<ul>
<li><a href="#%E5%9B%BD%E5%86%85%E7%BD%91%E7%AB%99%E5%88%86%E6%B5%81">国内网站分流</a></li>
<li><a href="#%E8%B0%83%E6%95%B4smartdns%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">调整 SmartDNS 配置文件</a></li>
<li><a href="#smartdns%E7%AE%A1%E7%90%86">SmartDNS 管理</a></li>
</ul>
</li>
<li><a href="#smartdns%E5%B1%8F%E8%94%BD%E5%B9%BF%E5%91%8A%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89">SmartDNS 屏蔽广告（可选）</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>在<a href="configure-DNS-over-HTTPS-for-macOS.html">macOS 配置 DNS-over-HTTPS</a>一文中，使用mosdns作为转发工具，本文将用SmartDNS替换mosdns，其余配置不变。</p>
<p>优点：用户只需关注网站，无需关注IP地址。</p>
<h2><a id="smartdns%E5%AE%89%E8%A3%85" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>SmartDNS 安装</h2>
<p>使用homebrew安装，也可以到官网下载安装<a href="https://github.com/mokeyish/smartdns-rs">https://github.com/mokeyish/smartdns-rs</a>。SmartDNS仅作分流和转发，使用端口<code>5304</code>。</p>
<pre class="line-numbers"><code class="language-plain_text">$ brew install smartdns
</code></pre>
<p>默认安装的配置文件位置：<code>/opt/homebrew/etc/smartdns/smartdns.conf</code>。</p>
<h3><a id="%E5%9B%BD%E5%86%85%E7%BD%91%E7%AB%99%E5%88%86%E6%B5%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>国内网站分流</h3>
<p>同时下载国内网站列表<a href="https://github.com/felixonmars/dnsmasq-china-list">felixonmars/dnsmasq-china-list</a>，将整个仓库下载下来。</p>
<p>转化成SmartDNS规则：</p>
<pre class="line-numbers"><code class="language-plain_text">$ make SERVER=china smartdns-domain-rules
</code></pre>
<p>将自动生成三个文件：<code>accelerated-domains.china.domain.smartdns.conf</code>、<code>google.china.domain.smartdns.conf</code>以及<code>apple.china.domain.smartdns.conf</code>。</p>
<p>将上述三个文件移动至文件夹<code>/opt/homebrew/etc/smartdns/</code>。<br />
同时，在该文件夹下新建<code>self-defined.conf</code>，作为个人常用国内网站列表，格式参考其他文件。</p>
<h3><a id="%E8%B0%83%E6%95%B4smartdns%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>调整 SmartDNS 配置文件</h3>
<p>修改SmartDNS配置文件<code>/opt/homebrew/etc/smartdns/smartdns.conf</code>，大部分不用调整，仅限转发：</p>
<pre class="line-numbers"><code class="language-plain_text"># dns server name, default is host name
# server-name, 
# example:
#   server-name smartdns
#

# whether resolv local hostname to ip address
# resolv-hostname yes

# dns server run user
# user [username]
# example: run as nobody
#   user nobody
#

# Include another configuration options
# conf-file [file]
# conf-file blacklist-ip.conf

conf-file /opt/homebrew/etc/smartdns/self-defined.conf
conf-file /opt/homebrew/etc/smartdns/google.china.domain.smartdns.conf
conf-file /opt/homebrew/etc/smartdns/apple.china.domain.smartdns.conf
conf-file /opt/homebrew/etc/smartdns/accelerated-domains.china.domain.smartdns.conf

# dns server bind ip and port, default dns server port is 53, support binding multi ip and port
# bind udp server
#   bind [IP]:[port][@device] [-group [group]] [-no-rule-addr] [-no-rule-nameserver] [-no-rule-ipset] [-no-speed-check] [-no-cache] [-no-rule-soa] [-no-dualstack-selection]
# bind tcp server
#   bind-tcp [IP]:[port][@device] [-group [group]] [-no-rule-addr] [-no-rule-nameserver] [-no-rule-ipset] [-no-speed-check] [-no-cache] [-no-rule-soa] [-no-dualstack-selection]
# bind tls server
#   bind-tls [IP]:[port][@device] [-group [group]] [-no-rule-addr] [-no-rule-nameserver] [-no-rule-ipset] [-no-speed-check] [-no-cache] [-no-rule-soa] [-no-dualstack-selection]
#   bind-cert-key-file [path to file]
#      tls private key file
#   bind-cert-file [path to file]
#      tls cert file
#   bind-cert-key-pass [password]
#      tls private key password
# option:
#   -group: set domain request to use the appropriate server group.
#   -no-rule-addr: skip address rule.
#   -no-rule-nameserver: skip nameserver rule.
#   -no-rule-ipset: skip ipset rule or nftset rule.
#   -no-speed-check: do not check speed.
#   -no-cache: skip cache.
#   -no-rule-soa: Skip address SOA(#) rules.
#   -no-dualstack-selection: Disable dualstack ip selection.
#   -force-aaaa-soa: force AAAA query return SOA.
#   -set-mark: set mark on packets.
# example: 
#  IPV4: 
#    bind :53
#    bind :53@eth0
#    bind :6053 -group office -no-speed-check
#  IPV6:
#    bind [::]:53
#    bind [::]:53@eth0

bind-tcp :5304
bind :5304
bind-tcp [::]:5304
bind [::]:5304

# tcp connection idle timeout
# tcp-idle-time [second]
tcp-idle-time 300

# dns cache size
# cache-size [number]
#   0: for no cache
cache-size 0

# enable persist cache when restart
# cache-persist no

# cache persist file
# cache-file /tmp/smartdns.cache

# prefetch domain
# prefetch-domain [yes|no]
# prefetch-domain yes

# cache serve expired 
# serve-expired [yes|no]
# serve-expired yes

# cache serve expired TTL
# serve-expired-ttl [num]
# serve-expired-ttl 0

# reply TTL value to use when replying with expired data
# serve-expired-reply-ttl [num]
# serve-expired-reply-ttl 30

# List of hosts that supply bogus NX domain results 
# bogus-nxdomain [ip/subnet]

# List of IPs that will be filtered when nameserver is configured -blacklist-ip parameter
# blacklist-ip [ip/subnet]

# List of IPs that will be accepted when nameserver is configured -whitelist-ip parameter
# whitelist-ip [ip/subnet]

# List of IPs that will be ignored
# ignore-ip [ip/subnet]

# speed check mode
# speed-check-mode [ping|tcp:port|none|,]
# example:
#   speed-check-mode ping,tcp:80,tcp:443
#   speed-check-mode tcp:443,ping
speed-check-mode none

# force AAAA query return SOA
# force-AAAA-SOA [yes|no]

# force specific qtype return soa
# force-qtype-SOA [qtypeid |...]
# force-qtype-SOA 65 28
force-qtype-SOA 65

# Enable IPV4, IPV6 dual stack IP optimization selection strategy
# dualstack-ip-selection-threshold [num] (0~1000)
# dualstack-ip-allow-force-AAAA [yes|no]
# dualstack-ip-selection [yes|no]
# dualstack-ip-selection no

# edns client subnet
# edns-client-subnet [ip/subnet]
# edns-client-subnet 192.168.1.1/24
# edns-client-subnet 8::8/56

# ttl for all resource record
# rr-ttl: ttl for all record
# rr-ttl-min: minimum ttl for resource record
# rr-ttl-max: maximum ttl for resource record
# rr-ttl-reply-max: maximum reply ttl for resource record
# example:
rr-ttl 60
rr-ttl-min 0
rr-ttl-max 86400
# rr-ttl-reply-max 60

# Maximum number of IPs returned to the client|8|number of IPs, 1~16
# example:
# max-reply-ip-num 1

# response mode
# Experimental feature
# response-mode [first-ping|fastest-ip|fastest-response]

# set log level
# log-level: [level], level=fatal, error, warn, notice, info, debug
# log-file: file path of log file.
# log-console [yes|no]: output log to console.
# log-size: size of each log file, support k,m,g
# log-num: number of logs, 0 means disable log
log-level warn

log-file /opt/homebrew/etc/smartdns/smartdns.log
log-size 1024k
# log-num 2
# log-file-mode [mode]: file mode of log file.

# dns audit
# audit-enable [yes|no]: enable or disable audit.
# audit-enable yes
# audit-SOA [yes|no]: enable or disable log soa result.
# audit-size size of each audit file, support k,m,g
# audit-file /var/log/smartdns-audit.log
# audit-console [yes|no]: output audit log to console.
# audit-file-mode [mode]: file mode of audit file.
# audit-size 128k
# audit-num 2

# Support reading dnsmasq dhcp file to resolve local hostname
# dnsmasq-lease-file /var/lib/misc/dnsmasq.leases

# certificate file
# ca-file [file]
# ca-file /etc/ssl/certs/ca-certificates.crt

# certificate path
# ca-path [path]
# ca-path /etc/ss/certs

# remote udp dns server list
# server [IP]:[PORT]|URL [-blacklist-ip] [-whitelist-ip] [-check-edns] [-group [group] ...] [-exclude-default-group]
# default port is 53
#   -blacklist-ip: filter result with blacklist ip
#   -whitelist-ip: filter result with whitelist ip,  result in whitelist-ip will be accepted.
#   -check-edns: result must exist edns RR, or discard result.
#   -group [group]: set server to group, use with nameserver /domain/group.
#   -exclude-default-group: exclude this server from default group.
#   -proxy [proxy-name]: use proxy to connect to server.
#   -bootstrap-dns: set as bootstrap dns server.
# server 8.8.8.8 -blacklist-ip -check-edns -group g1 -group g2
# server tls://dns.google:853 
# server https://dns.google/dns-query

server 127.0.0.1:5300
server 127.0.0.1:5305 -group china -exclude-default-group

# remote tcp dns server list
# server-tcp [IP]:[PORT] [-blacklist-ip] [-whitelist-ip] [-group [group] ...] [-exclude-default-group]
# default port is 53
# server-tcp 8.8.8.8

server-tcp 127.0.0.1:5300
server-tcp 127.0.0.1:5305 -group china -exclude-default-group

# server-https https://223.5.5.5/dns-query -group china -exclude-default-group
# server-https https://doh.pub/dns-query -group china -exclude-default-group

# remote tls dns server list
# server-tls [IP]:[PORT] [-blacklist-ip] [-whitelist-ip] [-spki-pin [sha256-pin]] [-group [group] ...] [-exclude-default-group]
#   -spki-pin: TLS spki pin to verify.
#   -tls-host-verify: cert hostname to verify.
#   -host-name: TLS sni hostname.
#   -no-check-certificate: no check certificate.
#   -proxy [proxy-name]: use proxy to connect to server.
#   -bootstrap-dns: set as bootstrap dns server.
# Get SPKI with this command:
#    echo | openssl s_client -connect '[ip]:853' | openssl x509 -pubkey -noout | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl enc -base64
# default port is 853
# server-tls 8.8.8.8
# server-tls 1.0.0.1

# server-tls 223.5.5.5:853 -group china -exclude-default-group
# server-tls 223.6.6.6:853 -group china -exclude-default-group


# remote https dns server list
# server-https https://[host]:[port]/path [-blacklist-ip] [-whitelist-ip] [-spki-pin [sha256-pin]] [-group [group] ...] [-exclude-default-group]
#   -spki-pin: TLS spki pin to verify.
#   -tls-host-verify: cert hostname to verify.
#   -host-name: TLS sni hostname.
#   -http-host: http host.
#   -no-check-certificate: no check certificate.
#   -proxy [proxy-name]: use proxy to connect to server.
#   -bootstrap-dns: set as bootstrap dns server.
# default port is 443
# server-https https://cloudflare-dns.com/dns-query

# socks5 and http proxy list
# proxy-server URL -name [proxy name]
#   URL: socks5://[username:password@]host:port
#        http://[username:password@]host:port
#   -name: proxy name, use with server -proxy [proxy-name]
# example:
#   proxy-server socks5://user:pass@1.2.3.4:1080 -name proxy
#   proxy-server http://user:pass@1.2.3.4:3128 -name proxy

# specific nameserver to domain
# nameserver /domain/[group|-]
# nameserver /www.example.com/office, Set the domain name to use the appropriate server group.
# nameserver /www.example.com/-, ignore this domain

# specific address to domain
# address /domain/[ip|-|-4|-6|#|#4|#6]
# address /www.example.com/1.2.3.4, return ip 1.2.3.4 to client
# address /www.example.com/-, ignore address, query from upstream, suffix 4, for ipv4, 6 for ipv6, none for all
# address /www.example.com/#, return SOA to client, suffix 4, for ipv4, 6 for ipv6, none for all

# specific cname to domain
# cname /domain/target

# enalbe DNS64 feature
# dns64 [ip/subnet]
# dns64 64:ff9b::/96

# enable ipset timeout by ttl feature
# ipset-timeout [yes]

# specific ipset to domain
# ipset /domain/[ipset|-]
# ipset /www.example.com/block, set ipset with ipset name of block 
# ipset /www.example.com/-, ignore this domain

# add to ipset when ping is unreachable
# ipset-no-speed ipsetname
# ipset-no-speed pass

# enable nftset timeout by ttl feature
# nftset-timeout [yes|no]
# nftset-timeout yes

# add to nftset when ping is unreachable
# nftset-no-speed [#4:ip#table#set,#6:ipv6#table#setv6]
# nftset-no-speed #4:ip#table#set

# enable nftset debug, check nftset setting result, output log when error.
# nftset-debug [yes|no]
# nftset-debug yes

# specific nftset to domain
# nftset /domain/[#4:ip#table#set,#6:ipv6#table#setv6]
# nftset /www.example.com/ip#table#set, equivalent to 'nft add element ip table set { ... }'
# nftset /www.example.com/-, ignore this domain
# nftset /www.example.com/#6:-, ignore ipv6

# set domain rules
# domain-rules /domain/ [-speed-check-mode [...]]
# rules:
#   [-c] -speed-check-mode [mode]: speed check mode
#                             speed-check-mode [ping|tcp:port|none|,]
#   [-a] -address [address|-]: same as address option
#   [-n] -nameserver [group|-]: same as nameserver option
#   [-p] -ipset [ipset|-]: same as ipset option
#   [-t] -nftset [nftset|-]: same as nftset option
#   [-d] -dualstack-ip-selection [yes|no]: same as dualstack-ip-selection option
#   -no-serve-expired: ignore expired domain
#   -delete: delete domain rule

# collection of domains 
# the domain-set can be used with /domain/ for address, nameserver, ipset, etc.
# domain-set -name [set-name] -type list -file [/path/to/file]
#   [-n] -name [set name]: domain set name
#   [-t] -type [list]: domain set type, list only now
#   [-f] -file [path/to/set]: file path of domain set
# 
# example:
# domain-set -name domain-list -type list -file /etc/smartdns/domain-list.conf
# address /domain-set:domain-list/1.2.3.4
# nameserver /domain-set:domain-list/server-group
# ipset /domain-set:domain-list/ipset
# domain-rules /domain-set:domain-list/ -speed-check-mode ping
</code></pre>
<h3><a id="smartdns%E7%AE%A1%E7%90%86" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>SmartDNS 管理</h3>
<p>暂停mosdns：</p>
<pre class="line-numbers"><code class="language-plain_text">$ brew services stop mosdns
$ sudo /opt/local/etc/mosdns/mosdns service uninstall
</code></pre>
<p>启动SmartDNS：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo brew services start smartdns
</code></pre>
<p>使用<code>sudo</code>命令会自动添加到开机启动项，启动配置文件位置：<code>/Library/LaunchDaemons/homebrew.mxcl.smartdns.plist</code>。</p>
<p>如果不需要后台服务，可以执行命令：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo /opt/homebrew/opt/smartdns/sbin/smartdns run -c /opt/homebrew/etc/smartdns/smartdns.conf
</code></pre>
<p>检查SmartDNS是否正常启动：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo lsof -Pni UDP:5304
</code></pre>
<p>重启与暂停SmartDNS：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo brew services start/restart/stop smartdns
</code></pre>
<h2><a id="smartdns%E5%B1%8F%E8%94%BD%E5%B9%BF%E5%91%8A%EF%BC%88%E5%8F%AF%E9%80%89%EF%BC%89" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>SmartDNS 屏蔽广告（可选）</h2>
<p>由于SmartDNS也具有屏蔽广告的功能，可以不再需要AdGuardHome，仅需将AdGuardHome关闭，并将SmartDNS端口设置为53即可。</p>
<ol>
<li>下载配置文件到目录<code>/opt/homebrew/etc/smartdns/</code></li>
</ol>
<pre class="line-numbers"><code class="language-plain_text">$ wget https://anti-ad.net/anti-ad-for-smartdns.conf -O /opt/homebrew/etc/smartdns/anti-ad-smartdns.conf
</code></pre>
<ol start="2">
<li>修改<code>/opt/homebrew/etc/smartdns/smartdns.conf</code>文件，包含上述配置文件</li>
</ol>
<pre class="line-numbers"><code class="language-plain_text">conf-file /opt/homebrew/etc/smartdns/anti-ad-smartdns.conf
</code></pre>
<p>其他广告列表见<a href="https://pymumu.github.io/smartdns/config/ad-block/">SmartDNS广告过滤列表</a>，可以定期下载更新文件，并重启SmartDNS生效。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>Dnsmasq-china-list<br />
<a href="https://github.com/felixonmars/dnsmasq-china-list">https://github.com/felixonmars/dnsmasq-china-list</a></li>
<li>SmartDNS <a href="https://github.com/mokeyish/smartdns-rs/">https://github.com/mokeyish/smartdns-rs</a></li>
<li>SmartDNS文档主页 <a href="https://pymumu.github.io/smartdns/">https://pymumu.github.io/smartdns/</a></li>
<li>SmartDNS分流加速 <a href="https://fordes.dev/posts/tutorials/dns-shunt/">https://fordes.dev/posts/tutorials/dns-shunt</a></li>
<li>超简易的方法实现SmartDNS分组 <a href="https://www.right.com.cn/forum/thread-4244241-1-1.html">https://www.right.com.cn/forum/thread-4244241-1-1.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS 配置 DNS-over-HTTPS]]></title>
    <link href="https://smartdigg.github.io/configure-DNS-over-HTTPS-for-macOS.html"/>
    <updated>2024-05-24T18:55:49+08:00</updated>
    <id>https://smartdigg.github.io/configure-DNS-over-HTTPS-for-macOS.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#cloudflared%E9%85%8D%E7%BD%AE">cloudflared 配置</a></li>
<li><a href="#dnscrypt-proxy%E9%85%8D%E7%BD%AE">dnscrypt-proxy 配置</a></li>
<li><a href="#mosdns%E9%85%8D%E7%BD%AE">mosdns配置</a></li>
<li><a href="#adguardhome%E9%85%8D%E7%BD%AE">AdGuardHome 配置</a>
<ul>
<li><a href="#%E7%AE%A1%E7%90%86adguardhome">管理AdGuardHome</a></li>
</ul>
</li>
<li><a href="#%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8">开机启动</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>基本要求：应对GFW以及国内的流氓互联网公司，所有流量必需经过DNS-over-HTTPS。</p>
<p>主要思路：</p>
<ol>
<li>使用cloudflared处理国内网站，端口5305；</li>
<li>使用dnscrypt-proxy处理国外网站，端口5300；</li>
<li>使用mosdns分流，端口5304；</li>
<li>使用AdGuardHome去广告以及管理黑名单，端口53。</li>
</ol>
<p>备注：第四步为可选步骤，仅需将mosdns的端口修改为53。</p>
<h2><a id="cloudflared%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>cloudflared 配置</h2>
<p>使用homebrew安装，也可以到官网下载安装<a href="https://github.com/cloudflare/cloudflared">https://github.com/cloudflare/cloudflared</a>。cloudflared负责解析国内网站，使用端口<code>5305</code>。</p>
<p>安装cloudflared：</p>
<pre class="line-numbers"><code class="language-plain_text">$ brew install cloudflared
$ mkdir -p /usr/local/etc/cloudflared
</code></pre>
<p>编辑文件<code>/usr/local/etc/cloudflared/config.yml</code>，没有便创建一个：</p>
<pre class="line-numbers"><code class="language-plain_text">proxy-dns: true
proxy-dns-port: 5305
proxy-dns-upstream:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
</code></pre>
<p>安装到系统：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo cloudflared service install
</code></pre>
<p>该命令会生成启动配置文件<code>/Library/LaunchDaemons/com.cloudflare.cloudflared.plist</code>。</p>
<p>检查cloudflared是否正常启动：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo lsof -Pni UDP:5305
</code></pre>
<p>更新或重启cloudflared：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo cloudflared service uninstall &amp;&amp; sudo cloudflared service install
</code></pre>
<h2><a id="dnscrypt-proxy%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>dnscrypt-proxy 配置</h2>
<p>使用homebrew安装，也可以从Github下载安装<a href="https://github.com/DNSCrypt/dnscrypt-proxy/">https://github.com/DNSCrypt/dnscrypt-proxy/</a>。dnscrypt-proxy负责解析国外网站，使用端口<code>5300</code>。</p>
<p>安装dnscrypt-proxy：</p>
<pre class="line-numbers"><code class="language-plain_text">$ brew install dnscrypt-proxy
</code></pre>
<p>安装后会自动生成启动配置文件<code>/Library/LaunchDaemons/dnscrypt-proxy.plist</code>。</p>
<p>修改配置文件中的部分内容：<code>/opt/homebrew/etc/dnscrypt-proxy.toml</code>：</p>
<pre class="line-numbers"><code class="language-plain_text">#自由添加server_names
server_names = ['cloudflare','cloudflare-ipv6','libredns','jp.tiar.app-doh', 'doh-crypto-sx', 'uncensoreddns-ipv6', 'cisco'] 

listen_addresses = ['127.0.0.1:5300', '[::1]:5300']

ipv4_servers = false
ipv6_servers = false
dnscrypt_servers = true
doh_servers = true
odoh_servers = true
require_dnssec = false
require_nolog = false
disabled_server_names = ['alidns-doh', 'dnspod']
</code></pre>
<p>启动dnscrypt-proxy服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$sudo brew services start dnscrypt-proxy
</code></pre>
<p>检查dnscrypt-proxy是否正常启动：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo lsof -Pni UDP:5300
</code></pre>
<p>管理dnscrypt-proxy服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$sudo brew services start/stop/restart dnscrypt-proxy
</code></pre>
<p><strong>备注</strong>：不要使用不带<code>sudo</code>的命令：<code>brew services start/stop/restart dnscrypt-proxy</code>，这是为了避免在如下位置出现导致端口冲突提醒的配置文件：<code>~/Library/LaunchAgents/homebrew.mxcl.dnscrypt-proxy.plist</code>。</p>
<h2><a id="mosdns%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>mosdns配置</h2>
<p>从Github下载安装<a href="https://github.com/IrineSistiana/mosdns">https://github.com/IrineSistiana/mosdns</a>。mosdns仅作分流和转发，使用端口<code>5304</code>。</p>
<p>解压缩后，将整个文件夹移至<code>/opt/local/etc/</code>，修改配置文件<code>/opt/local/etc/config.yaml</code>：</p>
<pre class="line-numbers"><code class="language-plain_text">log:
    level: info
    file: &quot;/opt/local/etc/mosdns/log.log&quot;

plugins:
    # 缓存
  - tag: cache
    type: cache
    args:
      size: 10240
      lazy_cache_ttl: 86400

   # 转发至国内DNS
  - tag: forward_local
    type: forward
    args:
      upstreams:
        - addr: &quot;tcp://127.0.0.1:5305&quot;
        - addr: &quot;udp://127.0.0.1:5305&quot;

        #- addr: &quot;https://223.5.5.5/dns-query&quot;
        #- addr: &quot;https://doh.pub/dns-query&quot;
        #  enable_http3: true
        

   # 转发至国外DNS
  - tag: forward_remote
    type: forward
    args:
      upstreams:
        - addr: &quot;tcp://127.0.0.1:5300&quot;
        - addr: &quot;udp://127.0.0.1:5300&quot;

   # china-ip
  - tag: local_ip
    type: ip_set
    args:
      files:
        - /opt/local/etc/mosdns/china_ip_list.txt

   # fallback的primary服务器,返回非国内ip则drop_resp
  - tag: local_sequence
    type: sequence
    args:
      - exec: $forward_local
      - matches: &quot;!resp_ip $local_ip&quot;
        exec: accept
      - exec: drop_resp

  # fallback的secondary服务器,返回非国内ip则添加至ipset,返回国内ip只接受不会添加ipset
  - tag: remote_sequence
    type: sequence
    args:
      - exec: $forward_remote
      - matches: &quot;!resp_ip $local_ip&quot;
        exec: ipset gfwlist,inet,24
      - exec: accept

  # fallback sequence
  - tag: fallback
    type: fallback
    args:
      primary: local_sequence
      secondary: remote_sequence
      threshold: 500
      always_standby: true

    # gfwlist解析出的ip添加至ipset，添加前先判断是否为国内ip或内网ip
  - tag: gfw-list
    type: sequence
    args:
      - exec: ttl 300-3600
      - matches: &quot;!resp_ip $local_ip&quot;
        exec: ipset gfwlist,inet,24
      - exec: accept

    # 主运行序列
  - tag: main_sequence
    type: sequence
    args:
      - matches: qtype 65
        exec: reject 3

      - matches: qname &amp;/opt/local/etc/mosdns/reject-list.txt
        exec: reject
    # - exec: prefer_ipv4

      # 动态域名跳过缓存
      - matches: &quot;!qname 00006801.com&quot;
        exec: $cache
      - matches: has_resp
        exec: accept

      - matches: qname &amp;/opt/local/etc/mosdns/direct-list.txt &amp;/opt/local/etc/mosdns/apple-cn.txt &amp;/opt/local/etc/mosdns/self-defined.txt
        exec: $forward_local
      - matches: has_resp
        exec: accept

      - matches: qname &amp;/opt/local/etc/mosdns/proxy-list.txt
        exec: $forward_remote
      - matches: has_resp
        exec: goto gfw-list

      - exec: $fallback

    # 启动监听服务
  - tag: udp_server
    type: udp_server
    args:
      entry: main_sequence
      listen: &quot;127.0.0.1:5304&quot;

  - tag: tcp_server
    type: tcp_server
    args:
      entry: main_sequence
      listen: &quot;127.0.0.1:5304&quot;
</code></pre>
<p>部分文件来源：</p>
<ul>
<li>china_ip_list.txt：<a href="https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt">https://raw.githubusercontent.com/Loyalsoldier/geoip/release/text/cn.txt</a></li>
<li>reject-list.txt：<a href="https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt">https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt</a></li>
<li>direct-list.txt：<a href="https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt">https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt</a></li>
<li>proxy-list.txt：<a href="https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt">https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/proxy-list.txt</a></li>
<li>apple-cn.txt：<a href="https://github.com/Loyalsoldier/v2ray-rules-dat/blob/release/apple-cn.txt">https://github.com/Loyalsoldier/v2ray-rules-dat/blob/release/apple-cn.txt</a></li>
<li>self-defined.txt：自行创建。</li>
</ul>
<p>安装mosdns服务：</p>
<pre class="line-numbers"><code class="language-plain_text"># mosdns service install -d 工作目录绝对路径 -c 配置文件路径
$ /opt/local/etc/mosdns/mosdns service install -d /opt/local/etc/mosdns/ -c /opt/local/etc/mosdns/config.yaml
</code></pre>
<p>服务仅设定为随系统自启，启动配置文件位置：<code>/Library/LaunchDaemons/mosdns.plist</code>。</p>
<p>安装成功后并不会马上运行，需手动启动。查看mosdns的服务：</p>
<pre class="line-numbers"><code class="language-plain_text">cat /Library/LaunchDaemons/mosdns.plist
</code></pre>
<p>修改<code>RunAtLoad</code>的值为<code>true</code>。</p>
<p>启动mosdns：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo /opt/local/etc/mosdns/mosdns service start
</code></pre>
<p>检查mosdns是否正常启动：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo lsof -Pni UDP:5304
</code></pre>
<p>管理mosdns服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo /opt/local/etc/mosdns/mosdns service stop/uninstall
</code></pre>
<p>备注：mosdns可替代cloudflared服务，仅需要修改配置文件中<code>forward_local</code>部分，示例代码已提示。唯一区别是cloudflared服务非常稳定。</p>
<h2><a id="adguardhome%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>AdGuardHome 配置</h2>
<p>从Github下载安装 <a href="https://github.com/AdguardTeam/AdGuardHome">https://github.com/AdguardTeam/AdGuardHome</a>。</p>
<p>解压缩，并将<code>AdGuardHome</code>文件夹移动至<code>/Applications/</code>目录下。</p>
<p>启动AdGuardHome：</p>
<pre class="line-numbers"><code class="language-plain_text">$ cd /Applications/AdGuardHome/ &amp;&amp; sudo /Applications/AdGuardHome/AdGuardHome 
</code></pre>
<p>网页管理界面监听接口选择<code>所有接口</code>，端口选择<code>3000</code>；<br />
DNS服务器监听选择<code>所有接口</code>，端口选择<code>53</code>；<br />
然后设置用户名和用户密码。</p>
<p>安装到系统服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$ cd /Applications/AdGuardHome/ &amp;&amp; sudo /Applications/AdGuardHome/AdGuardHome -s install
</code></pre>
<p>安装后会生成启动配置文件：<code>/Library/LaunchDaemons/AdGuardHome.plist</code>。</p>
<p>启动AdGuardHome服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo /Applications/AdGuardHome/AdGuardHome -s start
</code></pre>
<p>打开浏览器，输入网址 <a href="http://127.0.0.1:3000/">http://127.0.0.1:3000/ </a>即可访问AdGuardHome的管理界面。</p>
<p>在DNS设置中填入上游DNS服务器地址：<code>127.0.0.1:5304</code>以及<code>[::]:5304</code>。</p>
<p>过滤器可视情况添加：</p>
<ol>
<li>EasyList Adblock Plus 官方维护的广告规则。链接：<a href="https://easylist-downloads.adblockplus.org/easylist.txt">https://easylist-downloads.adblockplus.org/easylist.txt</a></li>
<li>EasyList China：国内网站广告过滤的主规则。链接：<a href="https://easylist-downloads.adblockplus.org/easylistchina.txt">https://easylist-downloads.adblockplus.org/easylistchina.txt</a></li>
<li>EasyPrivacy：反隐私跟踪、挖矿规则。链接：<a href="https://easylist-downloads.adblockplus.org/easyprivacy.txt">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></li>
<li>CJX's Annoyance List：过滤烦人的自我推广，并补充EasyPrivacy 隐私规则。链接：<a href="https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt">https://raw.githubusercontent.com/cjx82630/cjxlist/master/cjx-annoyance.txt</a></li>
<li>I don't care about cookies：屏蔽网站的cookies相关的警告。链接：<a href="https://www.i-dont-care-about-cookies.eu/abp/">https://www.i-dont-care-about-cookies.eu/abp/</a></li>
<li>anti-AD：中文区去广告。链接：<a href="https://anti-ad.net/easylist.txt">https://anti-ad.net/easylist.txt</a></li>
<li>Fanboy's Annoyances List 去除页面弹窗广告规则 链接：<a href="https://easylist-downloads.adblockplus.org/fanboy-annoyance.txt">https://easylist-downloads.adblockplus.org/fanboy-annoyance.txt</a></li>
<li>Github520 直连Github <a href="https://raw.hellogithub.com/hosts">https://raw.hellogithub.com/hosts</a></li>
<li>HalfLife	合并自EasylistChina、EasylistLite、CJX’sAnnoyance <a href="https://cdn.jsdelivr.net/gh/o0HalfLife0o/list@master/ad-pc.txt">https://cdn.jsdelivr.net/gh/o0HalfLife0o/list@master/ad-pc.txt</a></li>
</ol>
<p>检查AdGuardHome是否正常启动：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo lsof -Pni UDP:53
</code></pre>
<h3><a id="%E7%AE%A1%E7%90%86adguardhome" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>管理AdGuardHome</h3>
<p>配置文件：<code>/Applications/AdGuardHome/AdGuardHome.yaml</code>。</p>
<p>删除AdGuardHome系统服务：</p>
<pre class="line-numbers"><code class="language-plain_text">$ cd /Applications/AdGuardHome/ &amp;&amp; sudo /Applications/AdGuardHome/AdGuardHome -s uninstall
</code></pre>
<p>日常管理AdGuardHome：</p>
<pre class="line-numbers"><code class="language-plain_text">$ sudo /Applications/AdGuardHome/AdGuardHome -s start/stop/restart/status
</code></pre>
<p>设置开机启动AdGuardHome：</p>
<pre class="line-numbers"><code class="language-plain_text">#启动AdGuardHome
$ sudo launchctl start /Library/LaunchDaemons/AdGuardHome.plist 
</code></pre>
<h2><a id="%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>开机启动</h2>
<p>一般情况下，完成以上步骤便已将所有服务添加至开机启动项，如果没有则需要手动添加：</p>
<pre class="line-numbers"><code class="language-plain_text">#开机启动cloudflared
$ sudo launchctl load -w /Library/LaunchDaemons/com.cloudflare.cloudflared.plist

# 开机启动dnscrypt-proxy
$ sudo launchctl load -w /Library/LaunchDaemons/dnscrypt-proxy.plist

# 开机启动mosdns
$ sudo launchctl load -w /Library/LaunchDaemons/mosdns.plist

# 开机启动AdGuardHome
$ sudo launchctl load -w /Library/LaunchDaemons/AdGuardHome.plist
</code></pre>
<p>最后，需要修改系统DNS：</p>
<ol>
<li>在Mac上，选取苹果菜单&gt;“系统设置”，然后点按边栏中的“网络”。</li>
<li>点按要使用的网络服务（例如Wi-Fi或以太网），然后点按“详细信息”。</li>
<li>点按DNS，点按“DNS服务器”列表底部的“添加”按钮，然后输入DNS服务器的IPv4<code>127.0.0.1</code>或IPv6地址<code>::1</code>。</li>
<li>完成后，点按“好”。</li>
</ol>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>How to protect your network with AdGuard Home <a href="https://meshnet.nordvpn.com/how-to/security/protect-network-with-adguard-home">https://meshnet.nordvpn.com/how-to/security/protect-network-with-adguard-home</a></li>
<li>mosdns-wiki-zh <a href="https://irine-sistiana.gitbook.io/mosdns-wiki/mosdns-v5">https://irine-sistiana.gitbook.io/mosdns-wiki/mosdns-v5</a></li>
<li>AdGuard Home自建DNS防污染、去广告教程 #2 - 优化增强设置详解 <a href="https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-2.html">https://p3terx.com/archives/use-adguard-home-to-build-dns-to-prevent-pollution-and-remove-ads-2.html</a></li>
<li>cloudflared (DoH) <a href="https://docs.pi-hole.net/guides/dns/cloudflared/">https://docs.pi-hole.net/guides/dns/cloudflared</a></li>
<li>MacOS配置DNS Over HTTPS <a href="https://cat.ms/macos-use-doh">https://cat.ms/macos-use-doh</a></li>
<li>国内国外域名分流的配置 <a href="https://github.com/IrineSistiana/mosdns/discussions/605">https://github.com/IrineSistiana/mosdns/discussions/605</a></li>
<li>基于DNS的内网代理分流方案 <a href="https://github.com/Sereinfy/mosdns-config">https://github.com/Sereinfy/mosdns-config</a></li>
<li>利用Mosdns(v4 or v5)和AdGuardHome搭建自己的DNS <a href="https://www.xukecheng.tech/use-mosdns-and-adguardhome-to-build-your-own-dns">https://www.xukecheng.tech/use-mosdns-and-adguardhome-to-build-your-own-dns</a></li>
<li>在Mac上输入DNS和搜索域设置 <a href="https://support.apple.com/zh-cn/guide/mac-help/mh141272/mac">https://support.apple.com/zh-cn/guide/mac-help/mh141272/mac</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LibreWolf浏览器配置]]></title>
    <link href="https://smartdigg.github.io/librewolf-browser-configuration.html"/>
    <updated>2024-11-10T23:42:15+08:00</updated>
    <id>https://smartdigg.github.io/librewolf-browser-configuration.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E8%A3%85">LibreWolf浏览器安装</a></li>
<li><a href="#librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE">LibreWolf浏览器设置</a></li>
<li><a href="#librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AE%A1%E7%90%86">LibreWolf浏览器管理</a>
<ul>
<li><a href="#%E5%AE%89%E8%A3%85%E6%89%A9%E5%B1%95">安装扩展</a></li>
<li><a href="#%E6%9B%B4%E6%96%B0librewolf">更新LibreWolf</a></li>
<li><a href="#%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">添加搜索引擎</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E9%97%AE%E9%A2%98">其他问题</a></li>
</ul>
</li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>之前介绍过<a href="brave-browser-security-enhanced.html">Brave浏览器安全配置</a>，鉴于Google公司在Chromium项目中经常作妖，用户可以考虑使用LibreWolf浏览器。LibreWolf浏览器是一款基于Firefox的浏览器，安全性与隐私性不弱于Brave浏览器。可参考<a href="https://privacytests.org/">privacytests.org</a>浏览器测评。</p>
<h2><a id="librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E8%A3%85" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>LibreWolf浏览器安装</h2>
<pre class="line-numbers"><code class="language-plain_text">$ brew install --cask librewolf
</code></pre>
<p>由于LibreWolf浏览器开发者没有购买开发者证书，因此使用前需要在终端授权。</p>
<pre class="line-numbers"><code class="language-plain_text">$ xattr -cr /Applications/LibreWolf.app 
</code></pre>
<p>也可以一步到位安装：</p>
<pre class="line-numbers"><code class="language-plain_text">brew install librewolf --no-quarantine
</code></pre>
<h2><a id="librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AE%BE%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>LibreWolf浏览器设置</h2>
<p>LibreWolf浏览器基本上与Firefox一致，唯独在设置中增加LibreWolf选项。</p>
<p><img src="media/17312533358317/Librewolf-setting.webp" alt="Librewolf-setting" /></p>
<p>LibreWolf浏览器可以通过<code>about:config</code>来配置，另外也能通过修改配置文件<code>librewolf.overrides.cfg</code>来覆盖配置内容。</p>
<p><code>librewolf.overrides.cfg</code>配置文件默认不存在，如需使用需要手动创建：</p>
<pre class="line-numbers"><code class="language-plain_text">$ mkdir $HOME/.librewolf 
$ touch $HOME/.librewolf/librewolf.overrides.cfg
</code></pre>
<p>大致内容，按需修改：</p>
<pre class="line-numbers"><code class="language-plain_text">//Enable letterboxing
defaultPref(&quot;privacy.resistFingerprinting.letterboxing&quot;, true); 

//Limit cross-origin referers
defaultPref(&quot;network.http.referer.XOriginPolicy&quot;, 2);

//disable WebGL
defaultPref(&quot;webgl.disabled&quot;, true);
</code></pre>
<p>一些实用的设置：<br />
<code>about:config</code></p>
<pre class="line-numbers"><code class="language-plain_text">browser.search.openintab, true
ui.prefersReducedMotion=0
</code></pre>
<h2><a id="librewolf%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AE%A1%E7%90%86" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>LibreWolf浏览器管理</h2>
<h3><a id="%E5%AE%89%E8%A3%85%E6%89%A9%E5%B1%95" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装扩展</h3>
<p>官方建议尽可能少安装扩展，因为额外的扩展可能增加你的攻击面。</p>
<ul>
<li>uBlockOrigin <a href="https://github.com/gorhill/uBlock">https://github.com/gorhill/uBlock</a>；</li>
<li>Canvas Blocker <a href="https://addons.mozilla.org/en-US/firefox/addon/canvasblocker/">https://addons.mozilla.org/en-US/firefox/addon/canvasblocker</a>；<br />
其他拓展可参考<a href="network-security-manual.html">网络安全手册</a>。</li>
</ul>
<h3><a id="%E6%9B%B4%E6%96%B0librewolf" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>更新LibreWolf</h3>
<pre class="line-numbers"><code class="language-plain_text">brew update &amp;&amp; brew upgrade
</code></pre>
<h3><a id="%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>添加搜索引擎</h3>
<p>LibreWolf添加搜索引擎方式与Firefox相同：点击搜索框中的绿色加号，按指引操作即可。如果工具栏没有搜索框，可以右键点击工具栏，选择自定义工具栏，再将搜索栏拖放到需要的位置。</p>
<p><img src="media/17312533358317/x001.webp" alt="x001" /></p>
<p>部分搜索引擎不会弹出绿色加号，例如Bing <a href="https://www2.bing.com">https://www2.bing.com</a>，可以进入设置手动添加。</p>
<p><img src="media/17312533358317/x003.webp" alt="x003" /></p>
<h3><a id="%E5%85%B6%E4%BB%96%E9%97%AE%E9%A2%98" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>其他问题</h3>
<ul>
<li>&quot;SSL_ERROR_UNSAFE_NEGOTIATION&quot;：修改<code>security.ssl.require_safe_negotiation</code> 为<code>false</code>；</li>
<li>&quot;SEC_ERROR_OCSP_SERVER_ERROR&quot;：在设置LibreWolf首选项中取消勾选<code>Enforce OCSP hard-fail</code>。</li>
</ul>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>LibreWolf浏览器官网 <a href="https://librewolf.net/">https://librewolf.net</a></li>
<li>干净简洁的浏览器，LibreWolf软件体验  <a href="https://post.smzdm.com/p/ag5d8e9w/">https://post.smzdm.com/p/ag5d8e9w</a></li>
<li>纠结了很久 Chrome 和 Arc，最终选择了 Librewolf <a href="https://sspai.com/post/85096">https://sspai.com/post/85096</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS配置Homebrew]]></title>
    <link href="https://smartdigg.github.io/macos-configure-homebrew.html"/>
    <updated>2024-10-23T13:25:03+08:00</updated>
    <id>https://smartdigg.github.io/macos-configure-homebrew.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85commandlinetools">重新安装CommandLineTools</a></li>
<li><a href="#%E5%AE%89%E8%A3%85homebrew">安装Homebrew</a></li>
<li><a href="#homebrew%E4%BD%BF%E7%94%A8">Homebrew使用</a></li>
<li><a href="#%E6%81%A2%E5%A4%8Dhomebrew%E9%BB%98%E8%AE%A4%E6%BA%90">恢复Homebrew默认源</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>本篇适用于macOS重装或降级后使用Homebrew，部分内容也适用于全新系统安装Homebrew。</p>
<p>macOS重装或降级后，若使用Time Machine恢复，一般情况下Homebrew不能正常工作。这时就需重新配置Homebrew。</p>
<h2><a id="%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85commandlinetools" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>重新安装CommandLineTools</h2>
<p>重置<code>CommandLineTools</code>：</p>
<pre class="line-numbers"><code class="language-zsh">$ sudo xcode-select --reset
</code></pre>
<p>然后删除旧的<code>CommandLineTools</code>：</p>
<pre class="line-numbers"><code class="language-zsh">$ sudo rm -rf /Library/Developer/CommandLineTools
</code></pre>
<p>全新安装<code>CommandLineTools</code>：</p>
<pre class="line-numbers"><code class="language-zsh">$ sudo xcode-select --install
</code></pre>
<p>全新安装Homebrew，仅需执行最后一步。</p>
<h2><a id="%E5%AE%89%E8%A3%85homebrew" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装Homebrew</h2>
<p>以下设置适用于Apple Silicon CPU设备，即带M芯片，默认使用<code>zsh</code>。鉴于大陆github使用困难，本篇使用清华软件源。</p>
<ol>
<li>设置Homebrew环境变量：</li>
</ol>
<pre class="line-numbers"><code class="language-zsh">$ export HOMEBREW_BREW_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;
$ export HOMEBREW_CORE_GIT_REMOTE=&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git&quot;
$ export HOMEBREW_INSTALL_FROM_API=1
</code></pre>
<ol start="2">
<li>配置Homebrew Bottles环境变量：</li>
</ol>
<pre class="line-numbers"><code class="language-zsh">$ echo 'export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;' &gt;&gt; ~/.zprofile
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;' &gt;&gt; ~/.zprofile
$ export HOMEBREW_API_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/api&quot;
$ export HOMEBREW_BOTTLE_DOMAIN=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&quot;
</code></pre>
<ol start="3">
<li>（可选）配置Homebrew PyPi环境变量：</li>
</ol>
<pre class="line-numbers"><code class="language-zsh">$ export HOMEBREW_PIP_INDEX_URL=&quot;https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple&quot;
</code></pre>
<ol start="4">
<li>安装Homebrew：</li>
</ol>
<pre class="line-numbers"><code class="language-zsh">$ git clone --depth=1 https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.git brew-install
$ cd brew-install &amp;&amp; sudo ./install.sh
$ rm -rf brew-install
</code></pre>
<ol start="5">
<li>将<code>brew</code>程序的相关路径加入到环境变量中：</li>
</ol>
<pre class="line-numbers"><code class="language-zsh">test -r ~/.zprofile &amp;&amp; echo 'eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;' &gt;&gt; ~/.zprofile
</code></pre>
<h2><a id="homebrew%E4%BD%BF%E7%94%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Homebrew使用</h2>
<p>安装软件，例如<a href="librewolf-browser-configuration.html">LibreWolf浏览器</a></p>
<pre class="line-numbers"><code class="language-zsh">brew install --cask librewolf
</code></pre>
<p>升级软件包</p>
<pre class="line-numbers"><code class="language-zsh">brew upgrade ***
</code></pre>
<p>卸载软件</p>
<pre class="line-numbers"><code class="language-zsh">$ brew uninstall ***
</code></pre>
<p>更新Homebrew自身</p>
<pre class="line-numbers"><code class="language-plain_text">brew update 
```zsh

更新所有cask软件
```zsh
brew upgrade --cask $(brew list --cask)
</code></pre>
<h2><a id="%E6%81%A2%E5%A4%8Dhomebrew%E9%BB%98%E8%AE%A4%E6%BA%90" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>恢复Homebrew默认源</h2>
<p>参考清华帮助文档细节。</p>
<pre class="line-numbers"><code class="language-zsh"># brew 程序本身，Homebrew / Linuxbrew 相同
unset HOMEBREW_API_DOMAIN
unset HOMEBREW_BREW_GIT_REMOTE
git -C &quot;$(brew --repo)&quot; remote set-url origin https://github.com/Homebrew/brew

# 以下针对 macOS 系统上的 Homebrew
unset HOMEBREW_CORE_GIT_REMOTE
BREW_TAPS=&quot;$(BREW_TAPS=&quot;$(brew tap 2&gt;/dev/null)&quot;; echo -n &quot;${BREW_TAPS//$'\n'/:}&quot;)&quot;
for tap in core cask command-not-found; do
    if [[ &quot;:${BREW_TAPS}:&quot; == *&quot;:homebrew/${tap}:&quot;* ]]; then  # 只复原已安装的 Tap
        brew tap --custom-remote &quot;homebrew/${tap}&quot; &quot;https://github.com/Homebrew/homebrew-${tap}&quot;
    fi
done

# 重新拉取远程
brew update
</code></pre>
<p>同时检查<code>~/.zprofile</code>内容，删除带有<code>mirrors.tuna.tsinghua.edu.cn</code>的行。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>Homebrew 官方安装文档 <a href="https://docs.brew.sh/Installation">https://docs.brew.sh/Installation</a></li>
<li>清华 Homebrew 软件仓库配置 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[超简单个人网页TiddlyWiki]]></title>
    <link href="https://smartdigg.github.io/super-simple-personal-webpage-tiddlywiki.html"/>
    <updated>2024-09-13T14:35:05+08:00</updated>
    <id>https://smartdigg.github.io/super-simple-personal-webpage-tiddlywiki.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E4%B8%8B%E8%BD%BDtiddlywiki">下载TiddlyWiKi</a></li>
<li><a href="#%E7%BC%96%E8%BE%91%E5%92%8C%E4%BF%9D%E5%AD%98">编辑和保存</a>
<ul>
<li><a href="#%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">安装插件</a></li>
<li><a href="#%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">插入图片</a>
<ul>
<li><a href="#%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87">网页图片</a></li>
<li><a href="#%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87">本地图片</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0">软件更新</a></li>
<li><a href="#%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5">配置个人网页</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>TiddlyWiki是一款很强大的个人知识管理系统，也可作为个人网页使用。好处是单文件、易备份、跨平台、上手难度低。</p>
<h2><a id="%E4%B8%8B%E8%BD%BDtiddlywiki" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>下载TiddlyWiKi</h2>
<p>打开TiddlyWiki官网<a href="https://tiddlywiki.com/">https://tiddlywiki.com</a>，在GettingStarted部分下载空白副本，默认文件名为<code>empty.html</code>。</p>
<p>也可以选择下载TiddlyWiKi经典版本<a href="https://classic.tiddlywiki.com/">https://classic.tiddlywiki.com/</a>。</p>
<p>主要区别：经典TiddlyWiKi有多年历史，而新版TiddlyWiKi使用html5，外观更现代化。两个版本都在更新。</p>
<p>本文所介绍的是新版TiddlyWiKi，又称TiddlyWiKi 5。</p>
<h2><a id="%E7%BC%96%E8%BE%91%E5%92%8C%E4%BF%9D%E5%AD%98" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>编辑和保存</h2>
<p>TiddlyWiKi作为单一html文件可直接通过浏览器打开、编辑与保存。也可使用如TiddlyDesktop等软件自动保存。在GettingStarted部分也有其他软件推荐。</p>
<p>TiddlyDesktop需从Github下载安装<a href="https://github.com/TiddlyWiki/TiddlyDesktop/releases">https://github.com/TiddlyWiki/TiddlyDesktop/releases</a>。</p>
<p>打开TiddlyDesktop，将<code>empty.html</code>文件拖入其中。TiddlyDesktop主界面有<code>advanced</code>选项，可选择是否启用自动备份。</p>
<h3><a id="%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装插件</h3>
<p>可选择安装Markdown、Relink、Highlighter等插件。TiddlyWiKi原生不支持Markdown编辑，但可通过Markdown插件实现。</p>
<p>在设置中选择<code>Appearance</code>&gt;<code>Toolbars</code>&gt;<code>Page Toolbar</code>中勾选<code>new Markdown tiddler</code>，以后只需点击右侧图标便可添加Markdown笔记。</p>
<h3><a id="%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>插入图片</h3>
<p>TiddlyWiKi支持直接拖入图片，但这样一来会使得WiKi文件变得很大，相比而言，插入图片链接可节省很多空间。</p>
<h4><a id="%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>网页图片</h4>
<p>在Markdown模式中，插入网页图片：</p>
<pre class="line-numbers"><code class="language-plain_text">[img[https://i-blog.csdnimg.cn/blog_migrate/0b28e73406e0a641959929c1d1ffe32f.jpeg]]
</code></pre>
<h4><a id="%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>本地图片</h4>
<p>在<code>empty.html</code>所在文件夹下新建文件夹<code>images</code>，将需要插入的图片放置到该文件夹下。</p>
<p>在Markdown模式中，插入本地图片：</p>
<pre class="line-numbers"><code class="language-plain_text">[img[./images/image-name.jpg]]
</code></pre>
<h2><a id="%E8%BD%AF%E4%BB%B6%E6%9B%B4%E6%96%B0" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>软件更新</h2>
<p>打开更新网页<a href="https://tiddlywiki.com/upgrade.html">https://tiddlywiki.com/upgrade.html</a>，将自己的WiKi文件拖入，按照提示操作。</p>
<h2><a id="%E9%85%8D%E7%BD%AE%E4%B8%AA%E4%BA%BA%E7%BD%91%E9%A1%B5" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>配置个人网页</h2>
<p>参考<a href="how-to-quickly-build-a-personal-static-blog.html">如何快速搭建个人静态博客</a>，配置喜欢的域名，再利用GithubDesktop上传即可。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>TiddlyWiKi <a href="https://tiddlywiki.com/">https://tiddlywiki.com</a></li>
<li>TiddlyWiKi Classic <a href="https://classic.tiddlywiki.com/">https://classic.tiddlywiki.com</a></li>
<li>Classic TiddlyThemes <a href="https://github.com/YakovL/TiddlyThemes">https://github.com/YakovL/TiddlyThemes</a></li>
<li>TiddyWiki 简易指南 <a href="https://pkmer.cn/Pkmer-Docs/12-tiddywiki/tiddywiki/">https://pkmer.cn/Pkmer-Docs/12-tiddywiki/tiddywiki</a></li>
<li>探索 TiddlyWiki 5：个人知识管理的利器 <a href="https://blog.csdn.net/gitblog_00041/article/details/136706046">https://blog.csdn.net/gitblog_00041/article/details/136706046</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网络搜索引擎]]></title>
    <link href="https://smartdigg.github.io/search-engine.html"/>
    <updated>2023-11-22T01:38:16+08:00</updated>
    <id>https://smartdigg.github.io/search-engine.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%95%86%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%97%AE%E9%A2%98">商用搜索引擎问题</a></li>
<li><a href="#%E5%AE%89%E5%85%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8E%A8%E8%8D%90">安全搜索引擎推荐</a></li>
<li><a href="#%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">添加搜索引擎</a>
<ul>
<li><a href="#%E5%9F%BA%E4%BA%8Echromium%E6%B5%8F%E8%A7%88%E5%99%A8">基于Chromium浏览器</a></li>
<li><a href="#firefox">Firefox</a></li>
</ul>
</li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<h2><a id="%E5%95%86%E7%94%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%97%AE%E9%A2%98" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>商用搜索引擎问题</h2>
<p>商用搜索引擎通常收集、存储和分享有关用户搜索和浏览习惯的数据，包括但不限于搜索查询、IP地址、内容过滤、第三方Trackers等等。</p>
<p><strong>远离百度、搜狗、360搜索、Bing、Google等搜索引擎</strong>。</p>
<h2><a id="%E5%AE%89%E5%85%A8%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E6%8E%A8%E8%8D%90" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安全搜索引擎推荐</h2>
<ul>
<li><a href="https://search.brave.com/">Brave search</a></li>
<li><a href="https://search.disroot.org/">Disroot</a></li>
<li><a href="https://duckduckgo.com/">Duckduckgo</a></li>
<li><a href="https://gibiru.com/">Gibiru</a></li>
<li><a href="https://metager.org/">Metager</a></li>
<li><a href="https://www.startpage.com/">Mojeek</a></li>
<li><a href="https://www.qwant.com/">Qwant</a></li>
<li><a href="https://searx.space/">SearX</a>（可自建）</li>
<li><a href="https://www.startpage.com/">Startpage</a></li>
<li><a href="https://github.com/benbusby/whoogle-search">Whoogle</a>（可自建）</li>
<li>其他搜索引擎及比较：<a href="https://searchengine.party">https://searchengine.party</a></li>
</ul>
<h2><a id="%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>添加搜索引擎</h2>
<h3><a id="%E5%9F%BA%E4%BA%8Echromium%E6%B5%8F%E8%A7%88%E5%99%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>基于Chromium浏览器</h3>
<p>以Brave浏览器为例，参考<a href="brave-browser-security-enhanced.html">Brave浏览器安全配置</a>。<br />
从设置的侧边栏进入Search engine，在Manage search engines and site search页面下方Site search添加，</p>
<p>例如添加Brave搜索引擎：</p>
<pre class="line-numbers"><code class="language-plain_text">Name：Brave
Shortcut：
URL with %s in place of query：https://search.brave.com/search?q=%s
</code></pre>
<h3><a id="firefox" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Firefox</h3>
<p>首先在设置中将搜索框加入工具栏：<code>Add search bar in toolbar</code>。之后打开搜索引擎首页便会在搜索框出现添加提示。</p>
<p>部分搜索引擎不会出现提示，可到设置中手动添加，也可以安装插件<code>Add custom search engine</code>。 打开插件首选项，按照插件提示类似填写即可。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>privacytools <a href="https://www.privacytools.io/private-search">https://www.privacytools.io/private-search</a></li>
<li>prism-break <a href="https://prism-break.org/en/categories/gnu-linux/#web-search">https://prism-break.org/en/categories/gnu-linux/#web-search</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brave浏览器安全配置]]></title>
    <link href="https://smartdigg.github.io/brave-browser-security-enhanced.html"/>
    <updated>2023-11-05T17:24:33+08:00</updated>
    <id>https://smartdigg.github.io/brave-browser-security-enhanced.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%AE%89%E8%A3%85brave%E6%B5%8F%E8%A7%88%E5%99%A8">安装Brave浏览器</a></li>
<li><a href="#%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA">设置安全增强</a>
<ul>
<li><a href="#shields">Shields</a></li>
<li><a href="#privacy-and-security">Privacy and security</a></li>
<li><a href="#search-engine">Search engine</a></li>
<li><a href="#extensions">Extensions</a></li>
</ul>
</li>
<li><a href="#%E6%8F%92%E4%BB%B6">插件</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>Brave浏览器是一款关注隐私和安全的开源浏览器，提供简洁的安全配置。从<a href="https://privacytests.org/">PrivacyTests.org</a>可以看出Brave浏览器在日常使用中可以提供相当好的保护。</p>
<h2><a id="%E5%AE%89%E8%A3%85brave%E6%B5%8F%E8%A7%88%E5%99%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装Brave浏览器</h2>
<p>从Brave浏览器主页下载：<a href="https://brave.com/">https://brave.com</a>。</p>
<p>也可以到Github Brave页面下载：<a href="https://github.com/brave/brave-browser">https://github.com/brave/brave-browser</a>。</p>
<p>以下设置仅提供日常网络安全保护（网址加密、阻止广告、跟踪、指纹等），并不代表上网匿名。<br />
通过一些网站如<a href="https://browserleaks.com/">https://browserleaks.com</a>或<a href="https://coveryourtracks.eff.org/">https://coveryourtracks.eff.org</a>等可以轻易看到你的IP地址以及浏览器信息。</p>
<p>追求更高安全的匿名可使用虚拟机+VPN+TOR浏览器。</p>
<h2><a id="%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>设置安全增强</h2>
<p>安装Brave浏览器后，从右上角进入设置（Settings）。</p>
<h3><a id="shields" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Shields</h3>
<ul>
<li><code>Trackers &amp; ads blocking</code>：选择<code>Standard</code>；</li>
<li><code>Upgrade connections to HTTPS</code>：选择<code>Strict</code>；</li>
<li><code>Block fingerprinting</code>：选择<code>Standard</code>；</li>
<li><code>Block cookies</code>：选择<code>Only cross-site</code>；</li>
<li><code>Content filtering</code>：根据需要开启过滤；</li>
<li><code>Auto-redirect tracking URLs</code>：开启；</li>
<li><code>Prevent sites from fingerprinting me based on my language preferences</code>：开启；</li>
<li><code>Content Filters</code>：</li>
</ul>
<p>附一些常用的规则：</p>
<ul>
<li>HalfLife，规则合并自 EasylistChina、EasylistLite、CJX’sAnnoyance 合并规则：<a href="https://gitee.com/halflife/list/raw/master/ad.txt">https://gitee.com/halflife/list/raw/master/ad.txt</a></li>
<li>EasyPrivacy，隐私保护：<a href="https://easylist-downloads.adblockplus.org/easyprivacy.txt">https://easylist-downloads.adblockplus.org/easyprivacy.txt</a></li>
<li>I don’t care about cookies，我不关心 Cookie 的问题，屏蔽网站的 cookies 相关的警告：<a href="https://www.i-dont-care-about-cookies.eu/abp/">https://www.i-dont-care-about-cookies.eu/abp/</a></li>
<li>anti-AD，自称是目前中文区命中率最高的广告过滤列表：<a href="https://gitee.com/privacy-protection-tools/anti-ad/raw/master/easylist.txt">https://gitee.com/privacy-protection-tools/anti-ad/raw/master/easylist.txt</a></li>
<li>乘风广告、视频过滤规则：<a href="https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt%E3%80%81https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt">https://gitee.com/xinggsf/Adblock-Rule/raw/master/rule.txt、https://gitee.com/xinggsf/Adblock-Rule/raw/master/mv.txt</a></li>
</ul>
<p><strong>Social media blocking</strong>，关闭所有。</p>
<h3><a id="privacy-and-security" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Privacy and security</h3>
<ul>
<li><code>WebRTC IP Handling Policy</code>：选择<code>Disable non-proxied UDP</code>；也可以安装扩展<code>WebRTC Leak Shield</code>来限制WebRTC；</li>
<li><code>Use Google services for push messaging</code>：关闭；</li>
<li><code>Allow privacy-preserving product analytics (P3A)</code>：关闭；</li>
<li><code>Automatically send diagnostic reports</code>：关闭；</li>
<li><code>Automatically send daily usage ping to Brave</code>：关闭。</li>
</ul>
<h3><a id="search-engine" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Search engine</h3>
<ul>
<li><code>Improve search suggestions</code>：关闭；</li>
<li><code>Web Discovery Project</code>：关闭；</li>
<li><code>Index other search engines</code>：关闭。</li>
</ul>
<h3><a id="extensions" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Extensions</h3>
<p>不使用可以关闭：<code>Hangouts</code>、<code>Media Router</code>、<code>WebTorrent</code>、<code>Widevine</code>。</p>
<h2><a id="%E6%8F%92%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>插件</h2>
<ul>
<li>uBlock Origin；</li>
<li>Privacy Badger；</li>
<li>Decentraleyes；</li>
<li>Cookie AutoDelete；</li>
<li>Tampermonkey（可选）；</li>
<li>WebRTC Leak Shield（可选）。</li>
</ul>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>brave browser <a href="https://brave.com/">https://brave.com</a></li>
<li>browserleaks <a href="https://browserleaks.com/">https://browserleaks.com</a></li>
<li>privacytools <a href="https://www.privacytools.io/">https://www.privacytools.io</a></li>
<li>coveryourtracks <a href="https://coveryourtracks.eff.org/">https://coveryourtracks.eff.org</a></li>
<li>privacytests <a href="https://privacytests.org/news.html">https://privacytests.org/news.html</a></li>
<li>privacyguides <a href="https://www.privacyguides.org/en/desktop-browsers/#brave">https://www.privacyguides.org/en/desktop-browsers/#brave</a></li>
<li>使用Docker自建支持DoH、DoT的DNS服务器 <a href="https://morooi.com/2020/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/">https://morooi.com/2020/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/<br />
</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安全、隐私和匿名]]></title>
    <link href="https://smartdigg.github.io/security-privacy-anonymity.html"/>
    <updated>2023-11-04T09:58:41+08:00</updated>
    <id>https://smartdigg.github.io/security-privacy-anonymity.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%AE%89%E5%85%A8%E3%80%81%E9%9A%90%E7%A7%81%E5%92%8C%E5%8C%BF%E5%90%8D%E7%9A%84%E5%85%B3%E7%B3%BB">安全、隐私和匿名的关系</a>
<ul>
<li><a href="#%E6%B2%A1%E6%9C%89%E9%9A%90%E7%A7%81%E6%88%96%E5%8C%BF%E5%90%8D%E7%9A%84%E5%AE%89%E5%85%A8">没有隐私或匿名的安全</a></li>
<li><a href="#%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E7%9A%84%E9%9A%90%E7%A7%81">没有匿名的隐私</a></li>
<li><a href="#%E6%B2%A1%E6%9C%89%E5%AE%89%E5%85%A8%E7%9A%84%E5%8C%BF%E5%90%8D">没有安全的匿名</a></li>
<li><a href="#%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E7%9A%84%E5%AE%89%E5%85%A8%E5%92%8C%E9%9A%90%E7%A7%81">没有匿名的安全和隐私</a></li>
<li><a href="#%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E6%88%96%E5%AE%89%E5%85%A8%E7%9A%84%E9%9A%90%E7%A7%81">没有匿名或安全的隐私</a></li>
</ul>
</li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>我们可能认为我们知道隐私、安全和匿名之间的区别，但我们经常混淆它们，它们绝对不是同一件事。</p>
<p>简单理解安全、隐私和匿名：</p>
<ul>
<li>安全（Security）：防止未经授权的人接触到信息、账户或其他类似东西；</li>
<li>隐私（Privacy）：涉及你的身份和信息，不希望别人知道的。比如三围、聊天记录、银行卡密码等；</li>
<li>匿名（Anonymity）：隐藏你的真实身份，完全不为任何人所知。</li>
</ul>
<h2><a id="%E5%AE%89%E5%85%A8%E3%80%81%E9%9A%90%E7%A7%81%E5%92%8C%E5%8C%BF%E5%90%8D%E7%9A%84%E5%85%B3%E7%B3%BB" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安全、隐私和匿名的关系</h2>
<p>隐私有助于你的安全，因为如果别人不知道你的信息，他们就无法冒充你来回答安全问题。安全可以通过控制谁能获取你的信息来保护你的隐私。<br />
以家庭住房为例：安全是门锁；隐私是钥匙，你可以决定谁能得到备用钥匙；匿名是指没有人获得备用钥匙，甚至是家庭地址。</p>
<p>这三个概念不一定相互依赖。安全产品不能保证隐私，私有产品不能保证安全，匿名也不能保证。</p>
<h3><a id="%E6%B2%A1%E6%9C%89%E9%9A%90%E7%A7%81%E6%88%96%E5%8C%BF%E5%90%8D%E7%9A%84%E5%AE%89%E5%85%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>没有隐私或匿名的安全</h3>
<p>谷歌提供了世界一流的安全性，却没有隐私或匿名。</p>
<h3><a id="%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E7%9A%84%E9%9A%90%E7%A7%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>没有匿名的隐私</h3>
<p>类似<a href="privacy.com">Privacy.com</a>、<a href="https://ironvest.com/">IronVest</a>（曾经的Blur）提供的掩码卡(Masked card)服务，他们清楚地知道你是谁。不过，他们会向你提供虚拟电话号码、电子邮件地址和银行卡，让你提供给其他公司和个人，从而保护你的真实信息，帮助你保护自己的隐私。</p>
<h3><a id="%E6%B2%A1%E6%9C%89%E5%AE%89%E5%85%A8%E7%9A%84%E5%8C%BF%E5%90%8D" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>没有安全的匿名</h3>
<p>以现金为例，以现金支付商品可以保持您的匿名。但是，如果卖家不发货（除非您有收据），您就没有任何安全保障。</p>
<h3><a id="%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E7%9A%84%E5%AE%89%E5%85%A8%E5%92%8C%E9%9A%90%E7%A7%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>没有匿名的安全和隐私</h3>
<p>以Signal为例，Signal注册需要您的电话号码，因此可以通过法院命令甚至网络搜索来找到您的身份，具体取决于您使用的电话号码。即使您的身份不受保护和控制，您的Signal消息内容和您传输的信息也将受到保护和控制。</p>
<h3><a id="%E6%B2%A1%E6%9C%89%E5%8C%BF%E5%90%8D%E6%88%96%E5%AE%89%E5%85%A8%E7%9A%84%E9%9A%90%E7%A7%81" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>没有匿名或安全的隐私</h3>
<p>想想你在野外上厕所的情景。你可以找一些小树丛躲在后面，这样可以保护你的隐私，但却没有安全性或匿名性。没有任何东西可以阻止任何人找到你，如果警察要求你出示证件，你也得不到任何保护。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>privacyguides <a href="https://blog.privacyguides.org/2021/02/23/security-privacy-anonymity/">https://blog.privacyguides.org/2021/02/23/security-privacy-anonymity/</a></li>
<li>web.archive <a href="https://web.archive.org/web/20210729190914/https://thenewoil.xyz/privsecanon.html">https://web.archive.org/web/20210729190914/https://thenewoil.xyz/privsecanon.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[网络安全手册]]></title>
    <link href="https://smartdigg.github.io/network-security-manual.html"/>
    <updated>2023-08-16T12:54:11+08:00</updated>
    <id>https://smartdigg.github.io/network-security-manual.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%89%8D%E6%8F%90">前提</a></li>
<li><a href="#%E6%8A%B5%E5%BE%A1%E4%BF%A1%E6%81%AF%E6%B1%A1%E6%9F%93">抵御信息污染</a></li>
<li><a href="#%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9">系统选择</a></li>
<li><a href="#%E8%BD%AF%E4%BB%B6%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%80%89%E6%8B%A9">软件/服务的选择</a></li>
<li><a href="#%E6%B2%BB%E7%90%86%E6%B5%81%E6%B0%93%E8%BD%AF%E4%BB%B6">治理流氓软件</a></li>
<li><a href="#%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90">软件推荐</a>
<ul>
<li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8">浏览器</a>
<ul>
<li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6">浏览器插件</a></li>
<li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8%E6%80%A7%E6%A3%80%E6%B5%8B">浏览器安全性检测</a></li>
<li><a href="#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">搜索引擎</a></li>
</ul>
</li>
<li><a href="#%E5%8A%A0%E5%AF%86%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF">加密即时通讯</a></li>
<li><a href="#%E8%BE%93%E5%85%A5%E6%B3%95">输入法</a></li>
<li><a href="#%E9%82%AE%E7%AE%B1">邮箱</a></li>
<li><a href="#%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8">密码管理器</a></li>
<li><a href="#%E4%BA%91%E6%9C%8D%E5%8A%A1">云服务</a></li>
</ul>
</li>
<li><a href="#%E8%BA%AB%E4%BB%BD%E5%AE%89%E5%85%A8">身份安全</a></li>
<li><a href="#%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5">相关概念</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<h2><a id="%E5%89%8D%E6%8F%90" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>前提</h2>
<ul>
<li>不要从国区App Store、中资安卓应用市场或网页下载使用来路不明的免费VPN。</li>
<li>不使用过往有资安、隐私污点的翻墙服务。</li>
<li>确保翻墙终端设备的清洁：非中国国内安卓手机厂商ROM、从未安装360、QQ、微信等中资软件。</li>
<li>不要使用国内支付平台和渠道购买翻墙服务。</li>
<li>提高墙外网络服务帐号注册及使用时的匿名强度。</li>
</ul>
<h2><a id="%E6%8A%B5%E5%BE%A1%E4%BF%A1%E6%81%AF%E6%B1%A1%E6%9F%93" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>抵御信息污染</h2>
<p>就个人而言，更有效率的对抗虚假信息方法是「做减法」——减少资讯摄入量，只关注什么是相对可信的，不必去了解什么是虚假的，以及为什么是虚假的。不要把休闲娱乐资源当作可靠的时事资讯。学好外语，替换信息源语种。</p>
<h2><a id="%E7%B3%BB%E7%BB%9F%E9%80%89%E6%8B%A9" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>系统选择</h2>
<ul>
<li>不用中资操作系统（如EMUI、MIUI、ColorOS、鸿蒙等国产安卓ROM）</li>
<li>桌面操作系统的安全性优于移动操作系统</li>
<li>桌面级操作系统的安全性，Linux&gt;macOS&gt;Windows</li>
<li>移动操作系统的安全性，隐私强化型Android/适用于移动设备的Linux发行版&gt;原生Android/iOS+外区Apple ID&gt;iOS+国区Apple ID&gt;国行安卓ROM</li>
<li>对技术小白而言，用iOS比Android安全</li>
<li>尽可能用新款移动设备，及时更新最新版系统</li>
</ul>
<p>中国厂商定制的安卓很可能在系统中留下后门，存在严重安全隐患，此外还有越权收集用户信息、推送安全补丁不及时、阉割原生系统功能、推送垃圾广告和信息等诸多缺点。</p>
<h2><a id="%E8%BD%AF%E4%BB%B6%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%80%89%E6%8B%A9" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>软件/服务的选择</h2>
<ul>
<li>尽量不要使用需要手机号的软件或服务</li>
<li>绝对不要将自己使用的真实手机号码绑定社交/即时通讯软件账号</li>
<li>避免选择有资安、隐私污点的产品（如WhatsApp、Zoom、Opera）；不要安装中资毒瘤软件360安全卫士、腾讯电脑管家和百度卫士等（如有安装，建议卸载并重装系统）</li>
<li>优先选择【自由开源软件】（FOSS）</li>
<li>优先选择在【本地】运算和存储数据的软件和服务，避免使用依赖【云服务】的产品</li>
<li>从【可靠来源】下载软件（如项目官网、项目的GitHub仓库、Apple App Store、F-Droid、Google Play Store 等）</li>
<li>避免在移动设备上下载Facebook、Twitter、TikTok等收集海量个人信息的社交媒体应用程序，尽量使用其网页版</li>
</ul>
<h2><a id="%E6%B2%BB%E7%90%86%E6%B5%81%E6%B0%93%E8%BD%AF%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>治理流氓软件</h2>
<p>可以在【沙盒】应用中或【虚拟机】中运行该软件，阻止其访问本机数据，实现风险隔离。</p>
<h2><a id="%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>软件推荐</h2>
<h3><a id="%E6%B5%8F%E8%A7%88%E5%99%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>浏览器</h3>
<ul>
<li><a href="https://ftp.mozilla.org/pub/firefox/releases/">Firefox国际版</a></li>
<li><a href="https://brave.com/">Brave浏览器</a></li>
<li><a href="https://librewolf.net/">LibreWolf</a></li>
<li><a href="https://mullvad.net/en/browser">Mullvad</a></li>
</ul>
<p>如果不想加固浏览器，可以使用<a href="https://www.torproject.org/download/">Tor Browser</a>。</p>
<h4><a id="%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>浏览器插件</h4>
<ul>
<li>uBlock Origin</li>
<li>Decentraleyes</li>
<li>Privacy Badger</li>
<li>Cookie AutoDelete</li>
<li>ClearURLs</li>
<li>CanvasBlocker</li>
<li>SingleFileZ</li>
<li>Smart HTTPS</li>
</ul>
<h4><a id="%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%89%E5%85%A8%E6%80%A7%E6%A3%80%E6%B5%8B" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>浏览器安全性检测</h4>
<ul>
<li>检测IP泄露：<a href="https://ipleak.net">https://ipleak.net</a></li>
<li>浏览器指纹：<a href="https://amiunique.org">https://amiunique.org</a></li>
<li>检测DNS泄露：<a href="https://www.dnsleaktest.com/">https://www.dnsleaktest.com/</a>，<a href="https://www.expressvpn.com/dns-leak-test">https://www.expressvpn.com/dns-leak-test</a></li>
<li>检测WebRTC泄露：<a href="https://www.expressvpn.com/webrtc-leak-test">https://www.expressvpn.com/webrtc-leak-test</a></li>
<li>其它浏览器安全问题检测：<a href="https://browserleaks.com/">https://browserleaks.com/</a></li>
<li>检测Tor：<a href="https://check.torproject.org">https://check.torproject.org</a></li>
<li>Cloudflare检测DNS加密(DoH/DoT)、DNSSEC、TLS 1.3、SNI加密(ECH)：<a href="https://www.cloudflare.com/ssl/encrypted-sni">https://www.cloudflare.com/ssl/encrypted-sni</a></li>
<li>Device Info：<a href="https://www.deviceinfo.me">https://www.deviceinfo.me</a></li>
</ul>
<h4><a id="%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>搜索引擎</h4>
<ul>
<li>Brave search：<a href="https://search.brave.com">https://search.brave.com</a></li>
<li>DuckDucoGo：<a href="https://duckduckgo.com">https://duckduckgo.com</a></li>
<li>Startpage：<a href="https://www.startpage.com">https://www.startpage.com</a></li>
</ul>
<h3><a id="%E5%8A%A0%E5%AF%86%E5%8D%B3%E6%97%B6%E9%80%9A%E8%AE%AF" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>加密即时通讯</h3>
<p>不推荐所有来自中国的聊天软件。<br />
可以用Element、Session、Threema、XMPP。</p>
<h3><a id="%E8%BE%93%E5%85%A5%E6%B3%95" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>输入法</h3>
<p>不要安装任何来自中国的输入法软件，建议尽量使用开源的输入法，其次使用系统原生输入法。</p>
<p>推荐输入法：</p>
<ul>
<li>Fcitx；</li>
<li>小狼毫Weasel；</li>
<li>鼠鬚管Squirrel，教程：<a href="macos-install-rime.html">macOS安装Rime输入法</a>。</li>
</ul>
<h3><a id="%E9%82%AE%E7%AE%B1" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>邮箱</h3>
<p>无论何时都不要使用【中资邮箱】。使用PGP/GnuPG（GNU Privacy Guard，GPG）手动加密邮件内容。</p>
<p>教程：<a href="https://yummydimsum.github.io/docs/06-communication/mailvelope/">借助 Mailvelope 使用 PGP 加密邮件</a>。</p>
<h3><a id="%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86%E5%99%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>密码管理器</h3>
<p>推荐<a href="https://keepassxc.org/project">KeepassXC</a>，<a href="https://bitwarden.com/">Bitwarden</a>等，条件允许情况下优先选择离线版或自建软件。</p>
<h3><a id="%E4%BA%91%E6%9C%8D%E5%8A%A1" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>云服务</h3>
<ul>
<li>不使用中资云服务（如百度网盘，阿里云、腾讯云、京东云的VPS），即使使用也不要上传任何私人资料；</li>
<li>尽量避免云服务（如Google Docs、Notion）；</li>
<li>如果需要使用Google Drive、One Drive、Dropbox等商业网盘服务，为防政府/服务商监视用户、数据泄露、删除数据造成损失，建议将文件在本地加密后再上传；</li>
<li>配合使用自由开源的加密工具Cryptomator在本地将数据加密后再上传云端（适用于全平台）；</li>
<li>将文件存入VeraCrypt创建的【虚拟加密盘】中，再将虚拟加密盘上传到网盘（仅适用于桌面级设备）。</li>
</ul>
<p>更多软件推荐<a href="https://www.privacytools.io">privacytools</a>。</p>
<h2><a id="%E8%BA%AB%E4%BB%BD%E5%AE%89%E5%85%A8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>身份安全</h2>
<ul>
<li>注册墙外社交媒体时使用全新的虚拟身份，与墙内平台实名制身份、墙外分享日常的身份相隔离。</li>
<li>不要在墙外平台使用与墙内的微信、微博、贴吧、知乎等社交媒体平台相同的用户名、昵称、头像和签名。</li>
<li>不要将相同的联系方式，如墙内电子邮箱、即时通讯软件账号（微信、QQ、Telegram等）以备注、个人资料或博文等形式公布同时公布在墙外和墙内社交平台上，以防当局或者居心不良之人通过墙外与墙内社交软件账号之间的关联，利用已经过【实名制认证】的墙内社交软件来确定用户的真实身份。</li>
<li>不要在墙外平台上发送可能泄露自己真实身份的信息，比如公开自己的姓名、生日、学号、学校、专业、工作地点、常住城市</li>
<li>不要发送以下照片
<ul>
<li>露脸的自拍照</li>
<li>可清楚看到指纹的照片</li>
<li>带有易于判断具体位置的照片</li>
<li>未对姓名、ID、出发地、目的地、座位等关键信息作遮罩处理的火车票、高铁票、飞机票的照片</li>
<li>未对卡号、安全码等关键信息作模糊处理的银行卡照片</li>
<li>网购商品及快递盒、外卖及订单的照片</li>
<li>对个人信息作遮罩处理时建议使用色块【遮罩】，不建议使用马赛克工具【模糊】处理，后者有可能被算法还原</li>
</ul>
</li>
<li>不要发送暴露自己【声纹】的音、视频</li>
<li>防范【元数据】
<ul>
<li>发送自己拍摄照片前需去除照片的EXIF（Exchangeable image file format，可交换图像文件格式）信息，后者包含了照片的属性信息和拍摄数据，包括拍摄设置、拍摄时间和拍摄地点定位等信息</li>
<li>使用ExifTool、mat2（通用）清除【元数据】，或者截屏后发送截图</li>
<li>分享自己拍摄、剪辑的视频或其他文件前使用mat2等工具清除【元数据】</li>
</ul>
</li>
<li>不要在社交网站分享你的【定位】（不论是你的居住地点、工作地点还是旅行时访问的地点）</li>
<li>不要和墙外网友交换微信等墙内社媒/通讯软件帐号</li>
<li>不要在墙外、墙内社媒平台上发送相同的内容</li>
<li>防范【链接追踪参数】：不要通过已登录账号的客户端将新浪微博、网易云音乐等墙内服务的超链接转发到墙外社交平台，这些分享链接中带有关联实名制用户ID的【追踪参数】，可定位到真实身份，网警因而可以借助实名制的墙内帐号顺藤摸瓜。推特分享链接后的s参数与用户ID相关联，建议手动去除</li>
<li>防范【盲水印】：豆瓣、知乎等客户端截图带有关联用户ID的盲水印/不可见水印，可追踪截图者身份，建议使用Wayback/Web Archive等存档后转发Web Archive的存档链接</li>
<li>防范【语言指纹/行文风格】：不要在社交网站使用自己在墙内社交媒体或者另一社交网站的个性化习惯性用语</li>
<li>不要透露自己的线上线下活动时间（如某日某时参与某游行）</li>
<li>防范【钓鱼】
<ul>
<li>防范【钓鱼链接】：不要随意点开短链接和非主流网站的链接，可以先将链接上传到VirusTotal分析</li>
<li>不要点开通过邮件、私信（DM）发送的链接和文件，可使用独立的虚拟机实例下载文件后上传VirusTotal扫描确认安全性，事后删除该虚拟机实例<br />
如经自行检查发现有身份泄露的风险（比如用+86手机号绑定（过）Twitter），建议立即放弃当前帐号（删除旧账号发布的所有内容并注销账号），然后另行注册新账号。</li>
</ul>
</li>
</ul>
<p>不要通过修改用户名、昵称和头像等信息继续使用该账号，账号对应的userid是固定不变的，并且很可能已被写入社工数据库，后续的修改是无济于事的。</p>
<h2><a id="%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>相关概念</h2>
<ul>
<li>【新闻报道】是指对客观事实的陈述，只关注「发生了什么」。客观事实是客观的，但陈述毕竟是人为的产物，从遣词到造句都难免带有陈述者的主观色彩，因此只能做到相对客观。</li>
<li>【宣传机器】：在经济上受政治实体资助，在组织、人事和生产内容上受到政治实体的直接、广泛的干预，其生产内容服务于该政治实体的利益，在观点上明显偏袒该政治实体。</li>
<li>【零日漏洞】（0-day）也称零时差漏洞、零日攻击，指那些还没有补丁的安全漏洞。零日攻击是无法防范的，普通用户能做的只能是等待系统/软件发行商释出增加安全补丁的新版本后及时下载安装更新。当安全补丁释出后，同一漏洞就从0-day变成1-day乃至N-day，此时透过该漏洞发起的攻击是可以防范的，如果不及时安装更新就意味着让自己持续暴露在危险中。</li>
<li>【虚拟机】(virtual machine, VM）指在主系统通过虚拟化方案运行虚拟操作系统实例。</li>
<li>【云端安全】是指存储在通讯服务商的云端服务器上的用户聊天记录的安全性。就【云端安全】而言，最安全的做法是【端对端加密】，IM服务商的服务器只进行转发，无法解密用户的加密通讯内容。</li>
<li>【终端安全】是指安装即时通讯软件的终端装置的安全性，可分为【软件安全】和【物理安全】。</li>
<li>【软件安全】的例外是指终端装置中存在【恶意软件】，你的操作系统（如iOS、Android）、即时通讯应用本身或者其他应用（比如WhatsApp）存在后门，或者他人对你的设备拥有远程登陆权限，你的通讯内容就可能会泄露。</li>
<li>【物理安全】的例外是指你的装置落入了他人之手，如果你的设备没有设定密码、你被迫解锁设备或者警察使用【取证设备】破解了系统防护，他们将能看到你的通讯内容，取证设备还可能恢复被删除的聊天记录。即时通讯软件在移动装置上的【物理安全】的脆弱性是由移动装置及移动操作系统本身的脆弱性决定的。</li>
<li>【端对端加密】是指只有通信的双方能够解密通信内容，包括通信服务提供者在内的第三方都不掌握密钥，无法解密通信内容。【端对端加密】实质上是一种密钥的分发和管理方法，所解决的是【云端安全】和用户对通信服务商的信任问题，它能否真正发挥作用取决于服务商的做法。</li>
</ul>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>reconsidera <a href="https://reconsidera.github.io">https://reconsidera.github.io</a></li>
<li>privacytools <a href="https://www.privacytools.io">https://www.privacytools.io</a></li>
<li>prism-break <a href="http://prism-break.org/en">http://prism-break.org/en</a></li>
<li>privacyguides <a href="https://www.privacyguides.org/en">https://www.privacyguides.org/en</a></li>
<li>信息与网络安全手册 <a href="https://yummydimsum.github.io/">https://yummydimsum.github.io</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac文件完整性检测]]></title>
    <link href="https://smartdigg.github.io/mac-files-integrity-verification.html"/>
    <updated>2024-04-08T10:05:36+08:00</updated>
    <id>https://smartdigg.github.io/mac-files-integrity-verification.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#shasum">shasum</a></li>
<li><a href="#md5">md5</a></li>
<li><a href="#openssl">openssl</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>鉴别文件的完整性或鉴别文件内容是否被修改，主要通过<code>MD5</code>和<code>SHA</code>来完成。macOS下使用终端的一些简单命令即可完成。</p>
<h2><a id="shasum" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>shasum</h2>
<p><code>shasum</code>命令默认检测<code>SHA1</code>值，而通过参数<code>-a</code>可以修改为224、256、384或512。</p>
<p>用法：打开终端，输入如下命令，替换<code>/path/to/filename</code>为要验证的文件地址，也可以直接将文件拖动到终端。</p>
<pre class="line-numbers"><code class="language-zsh">$ shasum -a 256 /path/to/filename
</code></pre>
<p>如果有校验文件，还可以一键验证。</p>
<pre class="line-numbers"><code class="language-zsh">$ shasum -a 256 -c filesum
</code></pre>
<p>示例：</p>
<ul>
<li>sha 256</li>
</ul>
<pre class="line-numbers"><code class="language-zsh">$ shasum -a 256 ~/Downloads/debian-12.5.0-arm64-DVD-1.iso
</code></pre>
<ul>
<li>sha 512</li>
</ul>
<pre class="line-numbers"><code class="language-zsh">$ shasum -a 512 ~/Downloads/debian-12.5.0-arm64-DVD-1.iso
</code></pre>
<ul>
<li>shasum 一键验证</li>
</ul>
<pre class="line-numbers"><code class="language-zsh">$ shasum -a 256 -c ~/Downloads/SHA256SUMS
</code></pre>
<h2><a id="md5" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>md5</h2>
<p><code>md5</code>命令比较直接：</p>
<pre class="line-numbers"><code class="language-zsh">$ md5 ~/Downloads/debian-12.5.0-arm64-DVD-1.iso
</code></pre>
<h2><a id="openssl" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>openssl</h2>
<p>还可以用openssl来验证sha1，md5等。</p>
<pre class="line-numbers"><code class="language-zsh">$ openssl sha1 /path/to/filename
$ openssl md5 /path/to/filename
</code></pre>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>在macOS/OS X上不借助第三方软件计算文件MD5/SHA <a href="https://sspai.com/post/35730">https://sspai.com/post/35730</a></li>
<li>如何校验本站下载的文件的完整性 <a href="https://sysin.org/blog/shasum/">https://sysin.org/blog/shasum</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macOS安装Rime输入法]]></title>
    <link href="https://smartdigg.github.io/macos-install-rime.html"/>
    <updated>2024-02-17T15:00:58+08:00</updated>
    <id>https://smartdigg.github.io/macos-install-rime.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E5%AE%89%E8%A3%85">安装</a></li>
<li><a href="#%E4%B8%8B%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">下载配置文件</a></li>
<li><a href="#%E9%83%A8%E7%BD%B2">部署</a></li>
<li><a href="#%E5%8F%AF%E9%80%89%E9%85%8D%E7%BD%AE">可选配置</a>
<ul>
<li><a href="#%E4%BF%AE%E6%94%B9%E8%BE%93%E5%85%A5%E6%96%B9%E6%A1%88">修改输入方案</a></li>
<li><a href="#%E7%9A%AE%E8%82%A4%E9%85%8D%E7%BD%AE">皮肤配置</a></li>
<li><a href="#%E8%AF%8D%E5%85%B8">词典</a></li>
<li><a href="#%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE%E5%92%8C%E8%AF%8D%E5%BA%93">同步配置和词库</a></li>
</ul>
</li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>优点：开源、不联网、没有隐私问题。</p>
<h2><a id="%E5%AE%89%E8%A3%85" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装</h2>
<p>通过官网下载：<a href="https://rime.im/download/">https://rime.im/download/</a>，具体安装参考薄荷拼音的配置教程：<a href="https://www.mintimate.cc/zh/guide/installRime.html">安装Rime输入法</a>。</p>
<p>在 macOS 上也可以通过Homebrew安装：</p>
<pre class="line-numbers"><code class="language-bash">brew install --cask squirrel
</code></pre>
<p>记得去系统设置键盘添加Rime输入法。</p>
<h2><a id="%E4%B8%8B%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>下载配置文件</h2>
<p>选择配置文件的原则是简单，开箱即用，无需额外配置。推荐薄荷拼音 <a href="https://github.com/Mintimate/oh-my-rime">https://github.com/Mintimate/oh-my-rime</a>。</p>
<p>将整个配置文件库下载下来。</p>
<h2><a id="%E9%83%A8%E7%BD%B2" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>部署</h2>
<ol>
<li>点击菜单栏【ㄓ】-【用户设定】，将打开Rime默认配置文件夹<code>~/Library/Rime</code>。</li>
<li>清空该文件夹，然后将【配置文件】里所有文件粘贴进去。</li>
<li>点击菜单栏【ㄓ】-【部署】，至此完成定制配置。</li>
</ol>
<p>使用快捷键<code>Control</code>+ <code>~</code>，可以控制简繁体、emoji、全角半角等。</p>
<h2><a id="%E5%8F%AF%E9%80%89%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>可选配置</h2>
<h3><a id="%E4%BF%AE%E6%94%B9%E8%BE%93%E5%85%A5%E6%96%B9%E6%A1%88" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>修改输入方案</h3>
<p>编辑默认配置文件夹<code>~/Library/Rime</code>中<code>default.custom.yaml</code>文件。</p>
<p>修改候选词数量，需要更改<code>menu/page_size</code>后的数字。</p>
<p>若只使用小鹤双拼输入法，注释掉<code>schema_list</code>中除<code>double_pinyin_flypy</code>外其他输入方案。</p>
<h3><a id="%E7%9A%AE%E8%82%A4%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>皮肤配置</h3>
<p>调整Rime默认配置文件夹<code>~/Library/Rime</code>中<code>squirrel.yaml</code>文件：</p>
<ul>
<li><code>color_scheme</code>以及<code>color_scheme_dark</code>分别对应亮色与暗色主题。</li>
<li><code>candidate_list_layout</code>可设置候选项排列方向。</li>
</ul>
<h3><a id="%E8%AF%8D%E5%85%B8" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>词典</h3>
<p>以小鹤双拼为例，根据配置文件<code>double_pinyin_flypy.schema.yaml</code>提示，需要修改默认配置文件夹<code>~/Library/Rime</code>中<code>rime_mint.dict.yaml</code>文件，调整<code>import_tables</code>列表即可。</p>
<h3><a id="%E5%90%8C%E6%AD%A5%E9%85%8D%E7%BD%AE%E5%92%8C%E8%AF%8D%E5%BA%93" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>同步配置和词库</h3>
<p>在Rime默认配置文件夹<code>~/Library/Rime</code>中<code>installation.yaml</code>文件中追加：</p>
<pre class="line-numbers"><code class="language-plain_text">sync_dic: &quot;/path/to/rsync&quot;
installation_id: &quot;your_custom_id&quot;
</code></pre>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>薄荷拼音github仓库 <a href="https://github.com/Mintimate/oh-my-rime">https://github.com/Mintimate/oh-my-rime</a></li>
<li>薄荷拼音主页 <a href="https://www.mintimate.cc/">https://www.mintimate.cc/</a></li>
<li>小众软件介绍 <a href="https://www.appinn.com/oh-my-rime/">https://www.appinn.com/oh-my-rime/</a></li>
<li>【鼠鬚管】輸入法源代码 <a href="https://github.com/rime/squirrel">https://github.com/rime/squirrel</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何快速搭建个人静态博客]]></title>
    <link href="https://smartdigg.github.io/how-to-quickly-build-a-personal-static-blog.html"/>
    <updated>2023-07-23T23:20:07+08:00</updated>
    <id>https://smartdigg.github.io/how-to-quickly-build-a-personal-static-blog.html</id>
    <content type="html"><![CDATA[
<div class="mweb_toc"><ul>
<li><a href="#%E9%87%8D%E8%A6%81%E6%8F%90%E9%86%92">重要提醒</a></li>
<li><a href="#%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87">安装前准备</a></li>
<li><a href="#github%E9%85%8D%E7%BD%AE">Github配置</a></li>
<li><a href="#mweb-pro%E9%85%8D%E7%BD%AE">Mweb Pro配置</a>
<ul>
<li><a href="#%E7%BD%91%E9%A1%B5%E9%85%8D%E7%BD%AE">网页配置</a></li>
<li><a href="#%E5%86%85%E5%AE%B9%E5%86%99%E4%BD%9C%E5%8F%8A%E9%A2%84%E8%A7%88">内容写作及预览</a></li>
</ul>
</li>
<li><a href="#github-desktop%E9%85%8D%E7%BD%AE">Github Desktop配置</a></li>
<li><a href="#%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83">博客发布</a></li>
<li><a href="#%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C">进阶操作</a></li>
<li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li>
</ul>
</div>
<p>本文的静态博客主要利用Github Page，也可以采用Cloudflare Page，方法类似。</p>
<h2><a id="%E9%87%8D%E8%A6%81%E6%8F%90%E9%86%92" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>重要提醒</h2>
<p><strong>博客最重要的是内容，少折腾，坚持创作</strong>。</p>
<h2><a id="%E5%AE%89%E8%A3%85%E5%89%8D%E5%87%86%E5%A4%87" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>安装前准备</h2>
<p>macOS安装两个软件<a href="https://apps.apple.com/us/app/mweb-pro/id1403919533">Mweb Pro</a>以及<a href="https://desktop.github.com/">Github Desktop</a>。</p>
<p>优点：无需命令行，简单，仅需关注内容创作。</p>
<p>也可以选择安装<a href="https://getpublii.com/">Publii</a>或<a href="https://open.gridea.dev/">Gridea</a>，不限平台，配置简单。</p>
<h2><a id="github%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Github配置</h2>
<p>首先注册Github帐号，并在个人主界面里选择创建一个新的仓库（Create a new repository）。</p>
<p>进入页面后，在Repository name的位置填写域名，格式是<code>&lt;USERNAME&gt;.github.io</code>。借一张图，按图设置：</p>
<p><img src="media/16901256071454/202305b.webp" alt="202305b" /></p>
<p>以后你的博客网址便是<code>https://&lt;USERNAME&gt;.github.io</code>。</p>
<h2><a id="mweb-pro%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Mweb Pro配置</h2>
<h3><a id="%E7%BD%91%E9%A1%B5%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>网页配置</h3>
<p>在Mweb Pro的设置中选择<code>Library &amp; Backup</code>，设置<code>Library Location</code>以及<code>Build Sites Save Location</code>。</p>
<p>在Mweb Pro界面的左下角，加号选择<code>New Static Site Category</code>。</p>
<p><img src="media/16901256071454/202305a.webp" alt="202305a" /></p>
<p>紧接着配置名称<code>&lt;USERNAME&gt;.github.io</code>、博客主题、站点名、网址URL<code>https://&lt;USERNAME&gt;.github.io/</code>、时间格式以及网站描述。</p>
<p><img src="media/16901256071454/202305c.webp" alt="202305c" /></p>
<p>首次使用选择<code>Build Site</code>，也可以在博客有内容后再<code>Build Site</code>。这里的<code>Build Path</code>系自动生成，位置指向<code>Build Sites Save Location</code>下的子文件夹<code>&lt;USERNAME&gt;.github.io</code>。记住这个文件夹的位置，稍后要用到。</p>
<h3><a id="%E5%86%85%E5%AE%B9%E5%86%99%E4%BD%9C%E5%8F%8A%E9%A2%84%E8%A7%88" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>内容写作及预览</h3>
<p>之后在Mweb Pro的侧边栏选择<code>&lt;USERNAME&gt;.github.io</code>，在该分类下新建文件。博客的所有文章都保存在该分类下。</p>
<p>在侧边栏<code>&lt;USERNAME&gt;.github.io</code>分类上点击右键，选择<code>Clear &amp; Rebuild Site</code>，之后再选择<code>Preview Site</code>便可打开浏览器预览。</p>
<p><img src="media/16901256071454/202305d.webp" alt="202305d" /></p>
<p>至此，本地静态博客完成。</p>
<h2><a id="github-desktop%E9%85%8D%E7%BD%AE" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>Github Desktop配置</h2>
<p>安装Github Desktop软件，登录后克隆你的仓库<code>&lt;USERNAME&gt;.github.io</code>。其中<code>Local Path</code>为上一步设置的名为<code>&lt;USERNAME&gt;.github.io</code>的文件夹。</p>
<p>等待Clone完成后，界面上会显示几种管理修改你的项目的方式。借一张图，效果如下：<br />
<img src="media/16901256071454/202305e.webp" alt="202305e" /></p>
<h2><a id="%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>博客发布</h2>
<p>打开Github Desktop。Github Desktop会在界面左侧显示文件夹的变动。</p>
<p>先点击Github Desktop左下角的<code>Commit to master</code>，再点击<code>Push origin</code>就可以将内容上传。之后便可以去<code>https://&lt;USERNAME&gt;.github.io</code>查看博客最新内容。</p>
<h2><a id="%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>进阶操作</h2>
<p>可以修改主题、绑定个人域名、添加评论功能、设置Cloudflare加速，还可以设置自动发布等等。</p>
<h2><a id="%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="anchor" aria-hidden="true"><span class="octicon octicon-link"></span></a>参考资料</h2>
<ul>
<li>How to use Publish Script to Publish website <a href="https://www.mweb.im/how_to_use_shell_script.html">https://www.mweb.im/how_to_use_shell_script.html</a></li>
<li>Publii 官网 <a href="https://getpublii.com/">https://getpublii.com</a></li>
<li>MWeb 生成静态网站 &amp; 博客 <a href="https://zh.mweb.im/zh-mweb-static-blog.html">https://zh.mweb.im/zh-mweb-static-blog.html</a></li>
<li>自定义或制作自己的静态网站模板 <a href="https://zh.mweb.im/zh-make_your_site_template.html">https://zh.mweb.im/zh-make_your_site_template.html</a></li>
<li>我是如何利用Github Pages搭建起我的博客，细数一路的坑 <a href="https://zhuanlan.zhihu.com/p/334815426">https://zhuanlan.zhihu.com/p/334815426</a></li>
<li>GitHub Pages 搭建教程 <a href="https://sspai.com/post/54608">https://sspai.com/post/54608</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="https://smartdigg.github.io/hello-world.html"/>
    <updated>2023-07-23T22:28:06+08:00</updated>
    <id>https://smartdigg.github.io/hello-world.html</id>
    <content type="html"><![CDATA[
<p>最好永久记录！</p>

]]></content>
  </entry>
  
</feed>
